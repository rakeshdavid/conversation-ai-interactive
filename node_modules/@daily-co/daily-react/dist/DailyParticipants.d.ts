import { DailyParticipant, DailyParticipantTracks, DailyWaitingParticipant } from '@daily-co/daily-js';
import React from 'react';
/**
 * Extends DailyParticipant with convenient additional properties.
 * The `tracks` object needs to omit custom track keys, otherwise
 * autocomplete for `tracks` in useParticipantProperty doesn't work.
 */
export interface ExtendedDailyParticipant extends Omit<DailyParticipant, 'tracks'> {
    last_active?: Date;
    tracks: DailyParticipantTracks;
}
/**
 * Stores the most recent peerId as reported from [active-speaker-change](https://docs.daily.co/reference/daily-js/events/meeting-events#active-speaker-change) event.
 */
export declare const activeIdState: import("recoil").RecoilState<string | null>;
export declare const localIdState: import("recoil").RecoilState<string>;
export declare const localJoinDateState: import("recoil").RecoilState<Date | null>;
export declare const participantIdsState: import("recoil").RecoilState<string[]>;
export declare const participantState: (param: string) => import("recoil").RecoilState<ExtendedDailyParticipant | null>;
export declare const participantsState: import("recoil").RecoilValueReadOnly<ExtendedDailyParticipant[]>;
/**
 * Holds all participants in the waiting room.
 */
export declare const waitingParticipantsState: import("recoil").RecoilState<string[]>;
/**
 * Holds each invidiual waiting participant's information.
 */
export declare const waitingParticipantState: (param: string) => import("recoil").RecoilState<DailyWaitingParticipant>;
/**
 * Returns all waiting participant objects in an array.
 */
export declare const allWaitingParticipantsSelector: import("recoil").RecoilValueReadOnly<DailyWaitingParticipant[]>;
export declare const DailyParticipants: React.FC<React.PropsWithChildren<unknown>>;
