{"version":3,"file":"daily-react.cjs.production.min.js","sources":["../src/DailyContext.tsx","../src/hooks/useDaily.ts","../src/DailyEventContext.tsx","../src/hooks/useDailyEvent.ts","../src/hooks/useParticipantProperty.ts","../src/hooks/useThrottledDailyEvent.ts","../src/lib/customDeepEqual.ts","../src/lib/recoil-custom.ts","../src/utils/getParticipantPaths.ts","../src/utils/resolveParticipantPaths.ts","../src/DailyParticipants.tsx","../src/hooks/useLocalSessionId.ts","../src/hooks/useActiveSpeakerId.ts","../src/utils/isTrackOff.ts","../src/hooks/useParticipantIds.ts","../src/hooks/useScreenShare.ts","../src/hooks/useMediaTrack.ts","../src/hooks/useMergedRef.ts","../src/components/DailyAudioTrack.tsx","../src/components/DailyAudio.tsx","../src/components/DailyVideo.tsx","../src/DailyDevicesContext.tsx","../src/DailyDevices.tsx","../src/DailyLiveStreaming.tsx","../src/DailyMeeting.tsx","../src/DailyNetwork.tsx","../src/DailyRecordings.tsx","../src/hooks/useMeetingState.ts","../src/DailyRoom.tsx","../src/DailyTranscriptions.tsx","../src/hooks/useCallInstance.ts","../src/hooks/useCallObject.ts","../src/hooks/useParticipant.ts","../src/lib/inlineAudioWorklet.ts","../src/hooks/useCPULoad.ts","../src/hooks/useDailyError.ts","../src/hooks/useInputSettings.ts","../src/hooks/useParticipantCounts.ts","../src/hooks/useReceiveSettings.ts","../src/hooks/useRoom.ts","../src/hooks/useSendSettings.ts","../src/DailyProvider.tsx","../src/hooks/useActiveParticipant.ts","../src/hooks/useAppMessage.ts","../src/hooks/useAudioLevel.ts","../src/hooks/useAudioLevelObserver.ts","../src/hooks/useAudioTrack.ts","../src/hooks/useCallFrame.ts","../src/hooks/useDevices.ts","../src/hooks/useLiveStreaming.ts","../src/hooks/useLocalParticipant.ts","../src/hooks/useMeetingSessionState.ts","../src/hooks/useNetwork.ts","../src/hooks/usePermissions.ts","../src/hooks/useRecording.ts","../src/hooks/useRoomExp.ts","../src/hooks/useScreenAudioTrack.ts","../src/hooks/useScreenVideoTrack.ts","../src/hooks/useTranscription.ts","../src/hooks/useVideoTrack.ts","../src/hooks/useWaitingParticipants.ts"],"sourcesContent":["import { DailyCall } from '@daily-co/daily-js';\nimport { createContext } from 'react';\n\nexport const DailyContext = createContext<DailyCall | null>(null);\n","import { useContext, useDebugValue } from 'react';\n\nimport { DailyContext } from '../DailyContext';\n\n/**\n * Returns callObject instance passed to or created by closest <DailyProvider>.\n */\nexport const useDaily = () => {\n  const daily = useContext(DailyContext);\n  useDebugValue(daily);\n  return daily;\n};\n","import { DailyEvent } from '@daily-co/daily-js';\nimport { createContext } from 'react';\n\ninterface EventContextValue {\n  on(ev: DailyEvent, callback: Function, key: number): void;\n  off(ev: DailyEvent, key: number): void;\n}\n\nexport const DailyEventContext = createContext<EventContextValue>({\n  on: () => {},\n  off: () => {},\n});\n","import { DailyEvent, DailyEventObject } from '@daily-co/daily-js';\nimport {\n  useContext,\n  useDebugValue,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\n\nimport { DailyEventContext } from '../DailyEventContext';\n\ntype EventCallback<T extends DailyEvent> = (event: DailyEventObject<T>) => void;\n\nlet priorityCounter = -1;\nexport const getPriorityUnique = () => priorityCounter--;\nlet uniqueCounter = 1;\nexport const getUnique = () => uniqueCounter++;\n\n/**\n * Sets up a daily event listener using [on](https://docs.daily.co/reference/daily-js/instance-methods/on) method.\n * When this hook is unmounted the event listener is unregistered using [off](https://docs.daily.co/reference/daily-js/instance-methods/off).\n *\n * Warning: callback has to be a memoized reference (e.g. via [useCallback](https://reactjs.org/docs/hooks-reference.html#usecallback)).\n * Otherwise a console error might be thrown indicating a re-render loop issue.\n *\n * @param ev The DailyEvent to register.\n * @param callback A memoized callback reference to run when the event is emitted.\n */\nexport const useDailyEvent = <T extends DailyEvent>(\n  ev: T,\n  callback: EventCallback<T>,\n  INTERNAL_priority = false\n) => {\n  const { off, on } = useContext(DailyEventContext);\n  const [isBlocked, setIsBlocked] = useState(false);\n  const reassignCount = useRef<number>(0);\n\n  const eventId = useMemo(\n    () => (INTERNAL_priority ? getPriorityUnique() : getUnique()),\n    [INTERNAL_priority]\n  );\n\n  useEffect(() => {\n    if (!ev || isBlocked) return;\n    /**\n     * Check if callback has been reassigned often enough without hitting the 50ms timeout.\n     */\n    if (reassignCount.current > 100000) {\n      console.error(\n        `useDailyEvent called with potentially non-memoized event callback or due to too many re-renders.\n        Memoize using useCallback to avoid re-render loop or reduce the amount of state transitions the callback depends on.\n        Passed callback for '${ev}' event is NOT registered.`,\n        callback\n      );\n      setIsBlocked(true);\n      return;\n    }\n    reassignCount.current++;\n    const timeout = setTimeout(() => {\n      reassignCount.current = 0;\n    }, 50);\n    on(ev, callback, eventId);\n    return () => {\n      clearTimeout(timeout);\n      off(ev, eventId);\n    };\n  }, [callback, ev, eventId, isBlocked, off, on]);\n\n  useDebugValue({\n    event: ev,\n    eventId,\n    isBlocked,\n    callback,\n  });\n};\n","import { useDebugValue } from 'react';\nimport { atomFamily, selectorFamily, useRecoilValue } from 'recoil';\n\nimport { ExtendedDailyParticipant } from '../DailyParticipants';\nimport { RECOIL_PREFIX } from '../lib/constants';\nimport type { NumericKeys } from '../types/NumericKeys';\nimport type { Paths } from '../types/paths';\nimport type { PathValue } from '../types/pathValue';\n\ntype PropertyType = {\n  id: string;\n  property: Paths<ExtendedDailyParticipant>;\n};\n\ntype PropertiesType = {\n  id: string;\n  properties: Paths<ExtendedDailyParticipant>[];\n};\n\n/**\n * Stores all property paths for a given participant.\n */\nexport const participantPropertyPathsState = atomFamily<\n  Paths<ExtendedDailyParticipant>[],\n  string\n>({\n  key: RECOIL_PREFIX + 'participant-property-paths',\n  default: [],\n});\n\n/**\n * Stores resolved values for each participant and property path.\n */\nexport const participantPropertyState = atomFamily<any, PropertyType>({\n  key: RECOIL_PREFIX + 'participant-property',\n  default: null,\n  dangerouslyAllowMutability: true, // daily-js mutates track props (_managedByDaily, etc)\n});\n\n/**\n * Stores resolved values for each participant and property path.\n */\nexport const participantPropertiesState = selectorFamily<any, PropertiesType>({\n  key: RECOIL_PREFIX + 'participant-properties',\n  get:\n    ({ id, properties }) =>\n    ({ get }) => {\n      return properties.map((path) =>\n        get(participantPropertyState({ id, property: path }))\n      );\n    },\n  dangerouslyAllowMutability: true, // daily-js mutates track props (_managedByDaily, etc)\n});\n\ntype UseParticipantPropertyReturnType<\n  T extends ExtendedDailyParticipant,\n  P extends Paths<T> | Paths<T>[]\n> = P extends Paths<T>[]\n  ? { [K in keyof P]: K extends NumericKeys ? PathValue<T, P[K]> : unknown }\n  : P extends Paths<T>\n  ? PathValue<T, P>\n  : never;\n\n/**\n * Returns a participant's property that you subscribe to.\n * @param participantId The participant's session_id.\n * @param propertyPaths the array of participant property that you want to subscribe to.\n */\nexport const useParticipantProperty = <\n  T extends ExtendedDailyParticipant = ExtendedDailyParticipant,\n  P extends Paths<T> | [Paths<T>, ...Paths<T>[]] =\n    | Paths<T>\n    | [Paths<T>, ...Paths<T>[]]\n>(\n  participantId: string,\n  propertyPaths: P\n): UseParticipantPropertyReturnType<T, P> => {\n  const properties = useRecoilValue(\n    Array.isArray(propertyPaths)\n      ? participantPropertiesState({\n          id: participantId,\n          properties: propertyPaths as Paths<ExtendedDailyParticipant>[],\n        })\n      : participantPropertyState({\n          id: participantId,\n          property: propertyPaths as Paths<ExtendedDailyParticipant>,\n        })\n  );\n\n  useDebugValue(\n    Array.isArray(propertyPaths)\n      ? propertyPaths.reduce(\n          (o: Record<any, any>, path: Paths<T>, i: number) => {\n            o[path] = properties[i];\n            return o;\n          },\n          {}\n        )\n      : {\n          [propertyPaths as any]: properties,\n        }\n  );\n\n  return properties;\n};\n","import { DailyEvent, DailyEventObject } from '@daily-co/daily-js';\nimport throttle from 'lodash.throttle';\nimport {\n  useCallback,\n  useContext,\n  useDebugValue,\n  useEffect,\n  useMemo,\n  useRef,\n} from 'react';\n\nimport { DailyEventContext } from '../DailyEventContext';\nimport { getPriorityUnique, getUnique, useDailyEvent } from './useDailyEvent';\n\ntype EnsureArray<T> = T extends DailyEvent ? [T] : T;\n\ntype EventObjectsFor<T> = EnsureArray<T> extends (infer U)[]\n  ? U extends DailyEvent\n    ? DailyEventObject<U>\n    : never\n  : never;\n\ntype EventCallback<T extends DailyEvent | DailyEvent[]> = (\n  events: EventObjectsFor<T>[]\n) => void;\n\n/**\n * Sets up a throttled daily event listener using [on](https://docs.daily.co/reference/daily-js/instance-methods/on) method.\n * When this hook is unmounted the event listener is unregistered using [off](https://docs.daily.co/reference/daily-js/instance-methods/off).\n *\n * In comparison to useDailyEvent the callback passed here will be called with an array of event objects.\n *\n * You can pass an array of DailyEvents to register multiple daily events with a single callback handler.\n * The events returned in the callback parameter are guaranteed to be in the same order as they were emitted.\n *\n * @param ev The DailyEvent to register or an array of DailyEvent to register.\n * @param callback A memoized callback reference to run when throttled events are emitted.\n * @param throttleTimeout The minimum waiting time until the callback is called again. Default: 500\n */\nexport const useThrottledDailyEvent = <T extends DailyEvent>(\n  ev: T | T[],\n  callback: EventCallback<EnsureArray<T>>,\n  throttleTimeout = 500,\n  INTERNAL_priority = false\n) => {\n  const { off, on } = useContext(DailyEventContext);\n  const eventId = useMemo(() => {\n    if (Array.isArray(ev))\n      return ev.reduce<Record<string, number>>((r, e) => {\n        r[e] = INTERNAL_priority ? getPriorityUnique() : getUnique();\n        return r;\n      }, {});\n    return { [ev]: INTERNAL_priority ? getPriorityUnique() : getUnique() };\n  }, [ev, INTERNAL_priority]);\n\n  const throttledEvents = useRef<EventObjectsFor<T>[]>([]);\n\n  useDailyEvent(\n    'call-instance-destroyed',\n    useCallback(() => {\n      throttledEvents.current.length = 0;\n    }, [])\n  );\n\n  const emitEvents = useMemo(\n    () =>\n      throttle(\n        () => {\n          if (throttledEvents.current.length === 0) return;\n          callback(throttledEvents.current);\n          throttledEvents.current.length = 0;\n        },\n        throttleTimeout,\n        {\n          trailing: true,\n        }\n      ),\n    [callback, throttleTimeout]\n  );\n\n  useEffect(() => {\n    if (!ev) return;\n    const addEvent = (ev: DailyEventObject) => {\n      throttledEvents.current.push(ev);\n      emitEvents();\n    };\n    if (Array.isArray(ev)) {\n      ev.forEach((e) => on(e, addEvent, eventId[e]));\n    } else {\n      on(ev, addEvent, eventId[ev]);\n    }\n    return () => {\n      if (Array.isArray(ev)) {\n        ev.forEach((e) => off(e, eventId[e]));\n      } else {\n        off(ev, eventId[ev]);\n      }\n    };\n  }, [emitEvents, ev, eventId, off, on]);\n\n  useDebugValue({\n    event: ev,\n    eventId,\n  });\n};\n","/**\n * Compares two variables for deep equality.\n * Gracefully handles equality checks on MediaStreamTracks by comparing their ids.\n */\nexport function customDeepEqual(a: any, b: any): boolean {\n  if (a === b) return true;\n\n  // Handle special case for MediaStream\n  if (a instanceof MediaStream && b instanceof MediaStream) {\n    return (\n      a.id === b.id &&\n      a.active === b.active &&\n      a.getTracks().length === b.getTracks().length &&\n      a\n        .getTracks()\n        .every((track, idx) => customDeepEqual(track, b.getTracks()[idx]))\n    );\n  }\n\n  // Handle special case for MediaStreamTrack\n  if (a instanceof MediaStreamTrack && b instanceof MediaStreamTrack) {\n    return a.id === b.id && a.kind === b.kind && a.readyState === b.readyState;\n  }\n\n  // Handle special case for Date\n  if (a instanceof Date && b instanceof Date) {\n    return a.getTime() === b.getTime();\n  }\n\n  // Handle special case for RegExp\n  if (a instanceof RegExp && b instanceof RegExp) {\n    return a.source === b.source && a.flags === b.flags;\n  }\n\n  // Handle special case for Set\n  if (a instanceof Set && b instanceof Set) {\n    if (a.size !== b.size) {\n      return false;\n    }\n\n    for (const value of a.values()) {\n      if (!b.has(value)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  // Handle special case for Map\n  if (a instanceof Map && b instanceof Map) {\n    if (a.size !== b.size) {\n      return false;\n    }\n    for (const [key, value] of a.entries()) {\n      if (!b.has(key)) {\n        return false;\n      }\n      if (!customDeepEqual(value, b.get(key))) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  // If a or b are not objects or null, they can't be deeply equal\n  if (\n    typeof a !== 'object' ||\n    a === null ||\n    typeof b !== 'object' ||\n    b === null\n  ) {\n    return false;\n  }\n\n  // Get the keys of a and b. This handles both arrays and objects, since arrays are technically objects.\n  let keysA = Object.keys(a);\n  let keysB = Object.keys(b);\n\n  // If the number of keys are different, the objects are not equal\n  if (keysA.length !== keysB.length) return false;\n\n  for (let key of keysA) {\n    if (\n      // If key exists in a, but not in b -> not equal\n      !(key in b) ||\n      // Both keys exist in both object -> run nested equality check\n      !customDeepEqual(a[key], b[key])\n    )\n      return false;\n  }\n\n  // All keys and values match -> the objects are deeply equal\n  return true;\n}\n","import {\n  ReadOnlySelectorFamilyOptions,\n  ReadOnlySelectorOptions,\n  RecoilValueReadOnly,\n  selector,\n  selectorFamily,\n  SerializableParam,\n} from 'recoil';\n\ninterface EqualSelectorOptions<T>\n  extends Pick<ReadOnlySelectorOptions<T>, 'key' | 'get'> {\n  equals: (a: T, b: T) => boolean;\n}\n\n/**\n * Same API as [selector](https://recoiljs.org/docs/api-reference/core/selector), but with an additional `equals` key.\n * Allows to run custom equality checks before returning a new calculated value.\n * Use this, when returning non-primitive types from state.\n * Resource: https://github.com/facebookexperimental/Recoil/issues/1416#issuecomment-1044953271\n */\nexport function equalSelector<T>(\n  options: EqualSelectorOptions<T>\n): RecoilValueReadOnly<T> {\n  const inner = selector({\n    key: `${options.key}_inner`,\n    get: options.get,\n  });\n\n  let prior: T | undefined;\n\n  return selector({\n    key: options.key,\n    get: ({ get }) => {\n      const latest = get(inner);\n      if (prior != null && options.equals(latest, prior)) {\n        return prior;\n      }\n      prior = latest;\n      return latest as T;\n    },\n  });\n}\n\ninterface EqualSelectorFamilyOptions<T, P extends SerializableParam>\n  extends Pick<ReadOnlySelectorFamilyOptions<T, P>, 'key' | 'get'> {\n  equals: (a: T, b: T) => boolean;\n}\n\n/**\n * Same API as [selectorFamily](https://recoiljs.org/docs/api-reference/utils/selectorFamily/), but with an additional `equals` key.\n * Allows to run custom equality checks before returning a new calculated value.\n * Use this, when returning non-primitive types from state.\n * Resource: https://github.com/facebookexperimental/Recoil/issues/1416#issuecomment-1168603409\n */\nexport function equalSelectorFamily<T, P extends SerializableParam>(\n  options: EqualSelectorFamilyOptions<T, P>\n) {\n  const inner = selectorFamily<T, P>({\n    key: `${options.key}_inner`,\n    get: options.get,\n  });\n\n  const priorValues: Map<P, T | undefined> = new Map();\n\n  return selectorFamily<T, P>({\n    ...options,\n    key: options.key,\n    get:\n      (param: P) =>\n      ({ get }) => {\n        const latest = get(inner(param));\n        const prior = priorValues.get(param);\n        if (prior != null && options.equals(latest, prior)) {\n          return prior;\n        }\n        priorValues.set(param, latest);\n        return latest;\n      },\n  });\n}\n","import { ExtendedDailyParticipant } from '../DailyParticipants';\nimport { Paths } from '../types/paths';\n\n/**\n * Returns all property paths for an object.\n */\nconst getPaths = (\n  o: Record<any, any>,\n  currentPath = '',\n  visited = new Set()\n): string[] => {\n  if (typeof o !== 'object' || o === null || visited.has(o)) {\n    return [currentPath];\n  }\n\n  visited.add(o);\n\n  const paths = [];\n  for (const key in o) {\n    if (Object.prototype.hasOwnProperty.call(o, key)) {\n      const newPath = currentPath ? `${currentPath}.${key}` : key;\n      paths.push(newPath, ...getPaths(o[key], newPath, visited));\n    }\n  }\n\n  visited.delete(o);\n\n  return paths;\n};\n\n/**\n * Returns all property paths for a given participant object.\n */\nexport const getParticipantPaths = (p: ExtendedDailyParticipant) => {\n  return getPaths(p) as Paths<ExtendedDailyParticipant>[];\n};\n","import { ExtendedDailyParticipant } from '../DailyParticipants';\nimport type { NumericKeys } from '../types/NumericKeys';\nimport type { Paths } from '../types/paths';\nimport type { PathValue } from '../types/pathValue';\n\nconst resolvePath = <T extends ExtendedDailyParticipant, P extends Paths<T>>(\n  participant: T | null,\n  path: P\n): PathValue<T, P> => {\n  return String(path)\n    .split('.')\n    .filter((key) => key.length)\n    .reduce((p: any, key) => p && p[key], participant);\n};\n\ntype ResolveParticipantPathsReturnType<\n  T extends ExtendedDailyParticipant,\n  P extends Paths<T>[]\n> = { [K in keyof P]: K extends NumericKeys ? PathValue<T, P[K]> : never };\n\nexport const resolveParticipantPaths = <\n  T extends ExtendedDailyParticipant,\n  P extends Paths<T>[]\n>(\n  participant: T | null,\n  paths: P\n): ResolveParticipantPathsReturnType<T, P> => {\n  return paths.map((path) =>\n    resolvePath(participant, path)\n  ) as ResolveParticipantPathsReturnType<T, P>;\n};\n","import {\n  DailyParticipant,\n  DailyParticipantsObject,\n  DailyParticipantTracks,\n  DailyWaitingParticipant,\n} from '@daily-co/daily-js';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { atom, atomFamily, selector, useRecoilCallback } from 'recoil';\n\nimport { useDaily } from './hooks/useDaily';\nimport { useDailyEvent } from './hooks/useDailyEvent';\nimport {\n  participantPropertyPathsState,\n  participantPropertyState,\n} from './hooks/useParticipantProperty';\nimport { useThrottledDailyEvent } from './hooks/useThrottledDailyEvent';\nimport { RECOIL_PREFIX } from './lib/constants';\nimport { customDeepEqual } from './lib/customDeepEqual';\nimport { equalSelector } from './lib/recoil-custom';\nimport { getParticipantPaths } from './utils/getParticipantPaths';\nimport { resolveParticipantPaths } from './utils/resolveParticipantPaths';\n\n/**\n * Extends DailyParticipant with convenient additional properties.\n * The `tracks` object needs to omit custom track keys, otherwise\n * autocomplete for `tracks` in useParticipantProperty doesn't work.\n */\nexport interface ExtendedDailyParticipant\n  extends Omit<DailyParticipant, 'tracks'> {\n  last_active?: Date;\n  tracks: DailyParticipantTracks;\n}\n\n/**\n * Stores the most recent peerId as reported from [active-speaker-change](https://docs.daily.co/reference/daily-js/events/meeting-events#active-speaker-change) event.\n */\nexport const activeIdState = atom<string | null>({\n  key: RECOIL_PREFIX + 'active-id',\n  default: null,\n});\n\nexport const localIdState = atom<string>({\n  key: RECOIL_PREFIX + 'local-id',\n  default: '',\n});\n\nexport const localJoinDateState = atom<Date | null>({\n  key: RECOIL_PREFIX + 'local-joined-date',\n  default: null,\n});\n\nexport const participantIdsState = atom<string[]>({\n  key: RECOIL_PREFIX + 'participant-ids',\n  default: [],\n});\n\nexport const participantState = atomFamily<\n  ExtendedDailyParticipant | null,\n  string\n>({\n  key: RECOIL_PREFIX + 'participant-state',\n  default: null,\n  dangerouslyAllowMutability: true, // daily-js mutates track props (_managedByDaily, etc)\n});\n\nexport const participantsState = selector<ExtendedDailyParticipant[]>({\n  key: RECOIL_PREFIX + 'participants',\n  get: ({ get }) => {\n    const ids = get(participantIdsState);\n    const participants = ids\n      .map((id) => get(participantState(id)))\n      .filter(Boolean) as ExtendedDailyParticipant[];\n    return participants;\n  },\n  dangerouslyAllowMutability: true, // daily-js mutates track props (_managedByDaily, etc)\n});\n\n/**\n * Holds all participants in the waiting room.\n */\nexport const waitingParticipantsState = atom<string[]>({\n  key: RECOIL_PREFIX + 'waiting-participants',\n  default: [],\n});\n\n/**\n * Holds each invidiual waiting participant's information.\n */\nexport const waitingParticipantState = atomFamily<\n  DailyWaitingParticipant,\n  string\n>({\n  key: RECOIL_PREFIX + 'waiting-participant',\n  default: {\n    awaitingAccess: {\n      level: 'full',\n    },\n    id: '',\n    name: '',\n  },\n});\n\n/**\n * Returns all waiting participant objects in an array.\n */\nexport const allWaitingParticipantsSelector = equalSelector({\n  key: RECOIL_PREFIX + 'waitingParticipantsSelector',\n  equals: customDeepEqual,\n  get: ({ get }) => {\n    const ids = get(waitingParticipantsState);\n    return ids.map((id) => get(waitingParticipantState(id)));\n  },\n});\n\nexport const DailyParticipants: React.FC<React.PropsWithChildren<unknown>> = ({\n  children,\n}) => {\n  const daily = useDaily();\n  const [initialized, setInitialized] = useState(false);\n\n  const initParticipants = useRecoilCallback(\n    ({ transact_UNSTABLE }) =>\n      (participants: DailyParticipantsObject) => {\n        transact_UNSTABLE(({ set }) => {\n          set(localIdState, participants.local.session_id);\n          const participantsArray = Object.values(participants);\n          const ids = participantsArray.map((p) => p.session_id);\n          set(participantIdsState, ids);\n          participantsArray.forEach((p) => {\n            set(participantState(p.session_id), p);\n            const paths = getParticipantPaths(p);\n            // Set list of property paths\n            set(participantPropertyPathsState(p.session_id), paths);\n            // Set all property path values\n            paths.forEach((property) => {\n              const [value] = resolveParticipantPaths(\n                p as ExtendedDailyParticipant,\n                [property]\n              );\n              set(\n                participantPropertyState({\n                  id: p.session_id,\n                  property,\n                }),\n                value\n              );\n            });\n          });\n          setInitialized(true);\n        });\n      },\n    []\n  );\n  /**\n   * Initialize participants state based on daily.participants().\n   * Retries every 100ms to initialize the state, until daily is ready.\n   */\n  useEffect(() => {\n    if (!daily || initialized) return;\n    const interval = setInterval(() => {\n      const participants = daily.participants();\n      if (!('local' in participants)) return;\n      initParticipants(participants);\n      clearInterval(interval);\n    }, 100);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [daily, initialized, initParticipants]);\n  const handleInitEvent = useCallback(() => {\n    if (!daily) return;\n    const participants = daily?.participants();\n    if (!participants.local) return;\n    initParticipants(participants);\n  }, [daily, initParticipants]);\n  useDailyEvent('started-camera', handleInitEvent, true);\n  useDailyEvent('access-state-updated', handleInitEvent, true);\n  useDailyEvent(\n    'joining-meeting',\n    useRecoilCallback(\n      ({ set }) =>\n        () => {\n          set(localJoinDateState, new Date());\n          handleInitEvent();\n        },\n      [handleInitEvent]\n    ),\n    true\n  );\n  useDailyEvent(\n    'joined-meeting',\n    useCallback(\n      (ev) => {\n        initParticipants(ev.participants);\n      },\n      [initParticipants]\n    ),\n    true\n  );\n\n  /**\n   * Reset stored participants, when meeting has ended.\n   */\n  const handleCleanup = useRecoilCallback(\n    ({ reset, snapshot }) =>\n      async () => {\n        reset(localIdState);\n        reset(activeIdState);\n        const ids = await snapshot.getPromise(participantIdsState);\n        if (Array.isArray(ids))\n          ids.forEach((id) => reset(participantState(id)));\n        reset(participantIdsState);\n      },\n    []\n  );\n  useDailyEvent('call-instance-destroyed', handleCleanup, true);\n  useDailyEvent('left-meeting', handleCleanup, true);\n\n  useThrottledDailyEvent(\n    [\n      'active-speaker-change',\n      'participant-joined',\n      'participant-updated',\n      'participant-left',\n    ],\n    useRecoilCallback(\n      ({ transact_UNSTABLE }) =>\n        (evts) => {\n          if (!evts.length) return;\n          transact_UNSTABLE(({ get, reset, set }) => {\n            evts.forEach((ev) => {\n              switch (ev.action) {\n                case 'active-speaker-change': {\n                  set(activeIdState, ev.activeSpeaker.peerId);\n                  set(participantState(ev.activeSpeaker.peerId), (prev) => {\n                    if (!prev) return null;\n                    return {\n                      ...prev,\n                      last_active: new Date(),\n                    };\n                  });\n                  break;\n                }\n                case 'participant-joined': {\n                  // Update list of ids\n                  set(participantIdsState, (prevIds) =>\n                    prevIds.includes(ev.participant.session_id)\n                      ? prevIds\n                      : [...prevIds, ev.participant.session_id]\n                  );\n                  // Store entire object\n                  set(\n                    participantState(ev.participant.session_id),\n                    ev.participant\n                  );\n\n                  const paths = getParticipantPaths(ev.participant);\n                  // Set list of property paths\n                  set(\n                    participantPropertyPathsState(ev.participant.session_id),\n                    paths\n                  );\n                  // Set all property path values\n                  paths.forEach((property) => {\n                    const [value] = resolveParticipantPaths(\n                      ev.participant as ExtendedDailyParticipant,\n                      [property]\n                    );\n                    set(\n                      participantPropertyState({\n                        id: ev.participant.session_id,\n                        property,\n                      }),\n                      value\n                    );\n                  });\n                  break;\n                }\n                case 'participant-updated': {\n                  // Update entire object\n                  set(participantState(ev.participant.session_id), (prev) => ({\n                    ...prev,\n                    ...ev.participant,\n                  }));\n                  // Update local session_id\n                  if (ev.participant.local) {\n                    set(localIdState, (prevId) =>\n                      prevId !== ev.participant.session_id\n                        ? ev.participant.session_id\n                        : prevId\n                    );\n                  }\n\n                  const paths = getParticipantPaths(ev.participant);\n                  const oldPaths = get(\n                    participantPropertyPathsState(ev.participant.session_id)\n                  );\n                  // Set list of property paths\n                  set(\n                    participantPropertyPathsState(ev.participant.session_id),\n                    (prev) => (customDeepEqual(prev, paths) ? prev : paths)\n                  );\n                  // Reset old path values\n                  oldPaths\n                    .filter((p) => !paths.includes(p))\n                    .forEach((property) => {\n                      reset(\n                        participantPropertyState({\n                          id: ev.participant.session_id,\n                          property,\n                        })\n                      );\n                    });\n                  // Set all property path values\n                  paths.forEach((property) => {\n                    const [value] = resolveParticipantPaths(\n                      ev.participant as ExtendedDailyParticipant,\n                      [property]\n                    );\n                    set(\n                      participantPropertyState({\n                        id: ev.participant.session_id,\n                        property,\n                      }),\n                      (prev) => (customDeepEqual(prev, value) ? prev : value)\n                    );\n                  });\n                  break;\n                }\n                case 'participant-left': {\n                  // Remove from list of ids\n                  set(participantIdsState, (prevIds) =>\n                    prevIds.includes(ev.participant.session_id)\n                      ? [\n                          ...prevIds.filter(\n                            (id) => id !== ev.participant.session_id\n                          ),\n                        ]\n                      : prevIds\n                  );\n                  // Remove entire object\n                  reset(participantState(ev.participant.session_id));\n\n                  const oldPaths = get(\n                    participantPropertyPathsState(ev.participant.session_id)\n                  );\n                  // Remove property path values\n                  oldPaths.forEach((property) => {\n                    reset(\n                      participantPropertyState({\n                        id: ev.participant.session_id,\n                        property,\n                      })\n                    );\n                  });\n                  // Remove all property paths\n                  reset(\n                    participantPropertyPathsState(ev.participant.session_id)\n                  );\n                  break;\n                }\n              }\n            });\n          });\n        },\n      []\n    ),\n    100,\n    true\n  );\n\n  useThrottledDailyEvent(\n    [\n      'waiting-participant-added',\n      'waiting-participant-updated',\n      'waiting-participant-removed',\n    ],\n    useRecoilCallback(\n      ({ transact_UNSTABLE }) =>\n        (evts) => {\n          transact_UNSTABLE(({ reset, set }) => {\n            evts.forEach((ev) => {\n              switch (ev.action) {\n                case 'waiting-participant-added':\n                  set(waitingParticipantsState, (wps) => {\n                    if (!wps.includes(ev.participant.id)) {\n                      return [...wps, ev.participant.id];\n                    }\n                    return wps;\n                  });\n                  set(\n                    waitingParticipantState(ev.participant.id),\n                    ev.participant\n                  );\n                  break;\n                case 'waiting-participant-updated':\n                  set(\n                    waitingParticipantState(ev.participant.id),\n                    ev.participant\n                  );\n                  break;\n                case 'waiting-participant-removed':\n                  set(waitingParticipantsState, (wps) =>\n                    wps.filter((wp) => wp !== ev.participant.id)\n                  );\n                  reset(waitingParticipantState(ev.participant.id));\n                  break;\n              }\n            });\n          });\n        },\n      []\n    ),\n    100,\n    true\n  );\n\n  return <>{children}</>;\n};\n","import { useDebugValue } from 'react';\nimport { useRecoilValue } from 'recoil';\n\nimport { localIdState } from '../DailyParticipants';\n\n/**\n * Returns the local participant's session_id or empty string '',\n * if the local participant doesn't exist.\n */\nexport const useLocalSessionId = () => {\n  const localId = useRecoilValue(localIdState);\n  useDebugValue(localId);\n  return localId;\n};\n","import { useDebugValue, useEffect, useState } from 'react';\nimport { useRecoilValue } from 'recoil';\n\nimport { activeIdState } from '../DailyParticipants';\nimport { useLocalSessionId } from './useLocalSessionId';\n\ninterface UseActiveSpeakerIdArgs {\n  /**\n   * Anytime the active-speaker-change event emits a new id, this callback can be used\n   * to determine if the new speaker id should be ignored or not.\n   * Return false from the callback to ignore the new speaker id in this hook's instance.\n   */\n  filter?(id: string | null): boolean;\n  /**\n   * If set to true, useActiveParticipant will never return the local participant.\n   */\n  ignoreLocal?: boolean;\n}\n\nconst noopFilter = () => true;\n\n/**\n * Returns the most recent speaker id mentioned in an [active-speaker-change](https://docs.daily.co/reference/daily-js/events/meeting-events#active-speaker-change) event.\n */\nexport const useActiveSpeakerId = ({\n  filter = noopFilter,\n  ignoreLocal = false,\n}: UseActiveSpeakerIdArgs = {}) => {\n  const localSessionId = useLocalSessionId();\n  const recentActiveId = useRecoilValue(activeIdState);\n  const isIgnoredLocalId = ignoreLocal && recentActiveId === localSessionId;\n  const isFilteredOut = !filter?.(recentActiveId);\n  const isRecentIdRelevant = !isIgnoredLocalId && !isFilteredOut;\n  const [activeId, setActiveId] = useState<string | null>(\n    isRecentIdRelevant ? recentActiveId : null\n  );\n\n  useEffect(() => {\n    if (isIgnoredLocalId || isFilteredOut) return;\n    setActiveId(recentActiveId);\n  }, [isFilteredOut, isIgnoredLocalId, recentActiveId]);\n\n  useDebugValue(activeId);\n\n  return activeId;\n};\n","import { DailyTrackState } from '@daily-co/daily-js';\n\nexport const isTrackOff = (trackState: DailyTrackState['state']) =>\n  ['blocked', 'off'].includes(trackState);\n","import { DailyEventObject } from '@daily-co/daily-js';\nimport { useCallback, useDebugValue, useEffect, useState } from 'react';\nimport { Snapshot, useRecoilCallback, useRecoilValue } from 'recoil';\n\nimport {\n  ExtendedDailyParticipant,\n  participantIdsState,\n  participantState,\n} from '../DailyParticipants';\nimport { RECOIL_PREFIX } from '../lib/constants';\nimport { customDeepEqual } from '../lib/customDeepEqual';\nimport { equalSelectorFamily } from '../lib/recoil-custom';\nimport { isTrackOff } from '../utils/isTrackOff';\nimport {\n  participantPropertiesState,\n  participantPropertyState,\n} from './useParticipantProperty';\nimport { useThrottledDailyEvent } from './useThrottledDailyEvent';\n\ntype FilterParticipantsFunction = (\n  p: ExtendedDailyParticipant,\n  index: number,\n  arr: ExtendedDailyParticipant[]\n) => boolean;\ntype SerializableFilterParticipants =\n  | 'local'\n  | 'remote'\n  | 'owner'\n  | 'record'\n  | 'screen';\ntype FilterParticipants =\n  | SerializableFilterParticipants\n  | FilterParticipantsFunction;\n\ntype SortParticipantsFunction = (\n  a: ExtendedDailyParticipant,\n  b: ExtendedDailyParticipant\n) => 1 | -1 | 0;\ntype SerializableSortParticipants =\n  | 'joined_at'\n  | 'session_id'\n  | 'user_id'\n  | 'user_name';\ntype SortParticipants = SerializableSortParticipants | SortParticipantsFunction;\n\n/**\n * Short-cut state selector for useParticipantIds({ filter: 'local' })\n */\nexport const participantIdsFilteredAndSortedState = equalSelectorFamily<\n  string[],\n  {\n    filter: SerializableFilterParticipants | null;\n    sort: SerializableSortParticipants | null;\n  }\n>({\n  key: RECOIL_PREFIX + 'participant-ids-filtered-sorted',\n  equals: customDeepEqual,\n  get:\n    ({ filter, sort }) =>\n    ({ get }) => {\n      const ids = get(participantIdsState);\n      return ids\n        .filter((id) => {\n          switch (filter) {\n            /**\n             * Simple boolean fields first.\n             */\n            case 'local':\n            case 'owner':\n            case 'record': {\n              return get(participantPropertyState({ id, property: filter }));\n            }\n            case 'remote': {\n              return !get(participantPropertyState({ id, property: 'local' }));\n            }\n            case 'screen': {\n              const [screenAudioState, screenVideoState] = get(\n                participantPropertiesState({\n                  id,\n                  properties: [\n                    'tracks.screenAudio.state',\n                    'tracks.screenVideo.state',\n                  ],\n                })\n              );\n              return (\n                !isTrackOff(screenAudioState) || !isTrackOff(screenVideoState)\n              );\n            }\n            default:\n              return true;\n          }\n        })\n        .sort((idA, idB) => {\n          switch (sort) {\n            case 'joined_at':\n            case 'session_id':\n            case 'user_id':\n            case 'user_name': {\n              const [aSort] = get(\n                participantPropertiesState({ id: idA, properties: [sort] })\n              );\n              const [bSort] = get(\n                participantPropertiesState({ id: idB, properties: [sort] })\n              );\n              if (aSort !== undefined || bSort !== undefined) {\n                if (aSort === undefined) return -1;\n                if (bSort === undefined) return 1;\n                if (aSort > bSort) return 1;\n                if (aSort < bSort) return -1;\n              }\n              return 0;\n            }\n            default:\n              return 0;\n          }\n        });\n    },\n});\n\ninterface UseParticipantIdsArgs {\n  filter?: FilterParticipants;\n  onActiveSpeakerChange?(ev: DailyEventObject<'active-speaker-change'>): void;\n  onParticipantJoined?(ev: DailyEventObject<'participant-joined'>): void;\n  onParticipantLeft?(ev: DailyEventObject<'participant-left'>): void;\n  onParticipantUpdated?(ev: DailyEventObject<'participant-updated'>): void;\n  sort?: SortParticipants;\n}\n\n/**\n * Returns a list of participant ids (= session_id).\n * The list can optionally be filtered and sorted, using the filter and sort options.\n */\nexport const useParticipantIds = ({\n  filter,\n  onActiveSpeakerChange,\n  onParticipantJoined,\n  onParticipantLeft,\n  onParticipantUpdated,\n  sort,\n}: UseParticipantIdsArgs = {}) => {\n  /**\n   * For instances of useParticipantIds with string-based filter and sort,\n   * we can immediately return the correct ids from Recoil's state.\n   */\n  const preFilteredSortedIds = useRecoilValue(\n    participantIdsFilteredAndSortedState({\n      filter: typeof filter === 'string' ? filter : null,\n      sort: typeof sort === 'string' ? sort : null,\n    })\n  );\n\n  const shouldUseCustomIds =\n    typeof filter === 'function' || typeof sort === 'function';\n\n  const getCustomFilteredIds = useCallback(\n    (snapshot: Snapshot) => {\n      if (\n        // Ignore if both filter and sort are not functions.\n        typeof filter !== 'function' &&\n        typeof sort !== 'function'\n      )\n        return [];\n\n      const participants: ExtendedDailyParticipant[] = preFilteredSortedIds.map(\n        (id) =>\n          snapshot.getLoadable(participantState(id))\n            .contents as ExtendedDailyParticipant\n      );\n\n      return (\n        participants\n          // Make sure we don't accidentally try to filter/sort `null` participants\n          // This can happen when a participant's id is already present in store\n          // but the participant object is not stored, yet.\n          .filter(Boolean)\n          // Run custom filter, if it's a function. Otherwise don't filter any participants.\n          .filter(typeof filter === 'function' ? filter : () => true)\n          // Run custom sort, if it's a function. Otherwise don't sort.\n          .sort(typeof sort === 'function' ? sort : () => 0)\n          // Map back to session_id.\n          .map((p) => p.session_id)\n          // Filter any potential null/undefined ids.\n          // This shouldn't really happen, but better safe than sorry.\n          .filter(Boolean)\n      );\n    },\n    [filter, preFilteredSortedIds, sort]\n  );\n\n  const [customIds, setCustomIds] = useState<string[]>([]);\n\n  const maybeUpdateCustomIds = useRecoilCallback(\n    ({ snapshot }) =>\n      () => {\n        if (!shouldUseCustomIds) return;\n        const newIds = getCustomFilteredIds(snapshot);\n        if (customDeepEqual(newIds, customIds)) return;\n        setCustomIds(newIds);\n      },\n    [customIds, getCustomFilteredIds, shouldUseCustomIds]\n  );\n\n  useEffect(() => {\n    maybeUpdateCustomIds();\n  }, [maybeUpdateCustomIds]);\n\n  useThrottledDailyEvent(\n    [\n      'participant-joined',\n      'participant-updated',\n      'active-speaker-change',\n      'participant-left',\n    ],\n    useCallback(\n      (evts) => {\n        if (!evts.length) return;\n        evts.forEach((ev) => {\n          switch (ev.action) {\n            case 'participant-joined':\n              onParticipantJoined?.(ev);\n              break;\n            case 'participant-updated':\n              onParticipantUpdated?.(ev);\n              break;\n            case 'active-speaker-change':\n              onActiveSpeakerChange?.(ev);\n              break;\n            case 'participant-left':\n              onParticipantLeft?.(ev);\n              break;\n          }\n        });\n        maybeUpdateCustomIds();\n      },\n      [\n        maybeUpdateCustomIds,\n        onActiveSpeakerChange,\n        onParticipantJoined,\n        onParticipantLeft,\n        onParticipantUpdated,\n      ]\n    )\n  );\n\n  const result =\n    typeof filter === 'function' || typeof sort === 'function'\n      ? customIds\n      : preFilteredSortedIds;\n\n  useDebugValue(result);\n\n  return result;\n};\n","import {\n  DailyCall,\n  DailyEventObjectNonFatalError,\n  DailyTrackState,\n} from '@daily-co/daily-js';\nimport { useCallback, useDebugValue } from 'react';\nimport { useRecoilValue } from 'recoil';\n\nimport { RECOIL_PREFIX } from '../lib/constants';\nimport { customDeepEqual } from '../lib/customDeepEqual';\nimport { equalSelector } from '../lib/recoil-custom';\nimport { Reconstruct } from '../types/Reconstruct';\nimport { useDaily } from './useDaily';\nimport { useDailyEvent } from './useDailyEvent';\nimport { participantIdsFilteredAndSortedState } from './useParticipantIds';\nimport { participantPropertyState } from './useParticipantProperty';\n\nexport interface ScreenShare {\n  local: boolean;\n  screenAudio: DailyTrackState;\n  screenVideo: DailyTrackState;\n  screenId: string;\n  session_id: string;\n}\n\nconst screenSharesState = equalSelector({\n  key: RECOIL_PREFIX + 'screen-shares',\n  equals: customDeepEqual,\n  get: ({ get }) => {\n    const screenIds = get(\n      participantIdsFilteredAndSortedState({ filter: 'screen', sort: null })\n    );\n    return screenIds.map<ScreenShare>((id) => {\n      return {\n        local: get(participantPropertyState({ id, property: 'local' })),\n        screenAudio: get(\n          participantPropertyState({ id, property: 'tracks.screenAudio' })\n        ),\n        screenVideo: get(\n          participantPropertyState({ id, property: 'tracks.screenVideo' })\n        ),\n        screenId: `${id}-screen`,\n        session_id: id,\n      };\n    });\n  },\n});\n\ntype DailyEventObjectScreenShareError = Reconstruct<\n  DailyEventObjectNonFatalError,\n  'type',\n  'screen-share-error'\n>;\n\ninterface UseScreenShareArgs {\n  onError?(ev: DailyEventObjectScreenShareError): void;\n  onLocalScreenShareStarted?(): void;\n  onLocalScreenShareStopped?(): void;\n}\n\n/**\n * Allows access to information about shared screens, and methods to start or stop a local screen share.\n */\nexport const useScreenShare = ({\n  onError,\n  onLocalScreenShareStarted,\n  onLocalScreenShareStopped,\n}: UseScreenShareArgs = {}) => {\n  const daily = useDaily();\n\n  const startScreenShare = useCallback(\n    (...args: Parameters<DailyCall['startScreenShare']>) => {\n      daily?.startScreenShare(...args);\n    },\n    [daily]\n  );\n\n  const stopScreenShare = useCallback(\n    (...args: Parameters<DailyCall['stopScreenShare']>) => {\n      daily?.stopScreenShare(...args);\n    },\n    [daily]\n  );\n\n  useDailyEvent(\n    'local-screen-share-started',\n    useCallback(\n      () => onLocalScreenShareStarted?.(),\n      [onLocalScreenShareStarted]\n    )\n  );\n  useDailyEvent(\n    'local-screen-share-stopped',\n    useCallback(\n      () => onLocalScreenShareStopped?.(),\n      [onLocalScreenShareStopped]\n    )\n  );\n  useDailyEvent(\n    'nonfatal-error',\n    useCallback(\n      (ev) => {\n        if (ev.type !== 'screen-share-error') return;\n        onError?.(ev as DailyEventObjectScreenShareError);\n      },\n      [onError]\n    )\n  );\n\n  const screens = useRecoilValue(screenSharesState);\n\n  const result = {\n    isSharingScreen: screens.some((s) => s.local),\n    screens,\n    startScreenShare,\n    stopScreenShare,\n  };\n\n  useDebugValue(result);\n\n  return result;\n};\n","import { DailyParticipantTracks, DailyTrackState } from '@daily-co/daily-js';\nimport { useDebugValue } from 'react';\n\nimport { isTrackOff } from '../utils/isTrackOff';\nimport { useParticipantProperty } from './useParticipantProperty';\n\ntype MediaType = keyof DailyParticipantTracks;\n\nexport interface MediaTrackState extends DailyTrackState {\n  isOff: boolean;\n}\n\n/**\n * Returns a participant's track and state, based on the given MediaType.\n *\n * Equivalent to daily.participants()[participantId].tracks[type].\n *\n * @param participantId The participant's session_id.\n * @param type The track type. Default: \"video\"\n */\nexport const useMediaTrack = (\n  participantId: string,\n  type: MediaType = 'video'\n): MediaTrackState => {\n  const trackState = useParticipantProperty(participantId, `tracks.${type}`);\n\n  const result: MediaTrackState = trackState\n    ? {\n        ...trackState,\n        isOff: isTrackOff(trackState.state),\n      }\n    : {\n        isOff: true,\n        persistentTrack: undefined,\n        state: 'off',\n        subscribed: false,\n      };\n\n  useDebugValue(result);\n\n  return result;\n};\n","/**\n * Original source: https://github.com/jaredLunde/react-hook/blob/master/packages/merged-ref/src/index.tsx\n * Original author: Jared Lunde (https://github.com/jaredLunde)\n * Originally published under the MIT license: https://github.com/jaredLunde/react-hook/blob/master/LICENSE\n */\n\nimport React, { useCallback } from 'react';\n\nfunction useMergedRef<T>(...refs: React.Ref<T>[]): React.RefCallback<T> {\n  return useCallback(\n    (element: T) => {\n      for (let i = 0; i < refs.length; i++) {\n        const ref = refs[i];\n        if (typeof ref === 'function') ref(element);\n        else if (ref && typeof ref === 'object')\n          (ref as React.MutableRefObject<T>).current = element;\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    refs\n  );\n}\n\nexport default useMergedRef;\n","import React, { forwardRef, memo, useEffect, useRef } from 'react';\n\nimport { useMediaTrack } from '../hooks/useMediaTrack';\nimport useMergedRef from '../hooks/useMergedRef';\n\nexport interface DailyAudioPlayException {\n  name?: string;\n  message?: string;\n  sessionId: string;\n  target: HTMLAudioElement;\n  type: string;\n}\n\ninterface Props extends React.AudioHTMLAttributes<HTMLAudioElement> {\n  /**\n   * Callback to handle failed attempt to play audio.\n   */\n  onPlayFailed?(e: DailyAudioPlayException): void;\n  sessionId: string;\n  type?: 'audio' | 'screenAudio' | 'rmpAudio';\n}\n\nexport const DailyAudioTrack = memo(\n  forwardRef<HTMLAudioElement, Props>(\n    ({ onPlayFailed, sessionId, type = 'audio', ...props }, ref) => {\n      const audioEl = useRef<HTMLAudioElement>(null);\n      const audio = useMediaTrack(sessionId, type);\n      const audioRef = useMergedRef<HTMLAudioElement>(audioEl, ref);\n      const subscribedState = audio?.subscribed;\n\n      /**\n       * Setup audio tag.\n       */\n      useEffect(() => {\n        const audioTag = audioEl.current;\n        if (!audioTag || !audio?.persistentTrack) return;\n        let playTimeout: ReturnType<typeof setTimeout>;\n        const handleCanPlay = () => {\n          audioTag.play().catch((e) => {\n            onPlayFailed?.({\n              sessionId,\n              target: audioTag,\n              type,\n              message: e.message,\n              name: e.name,\n            });\n          });\n        };\n        const handlePlay = () => {\n          clearTimeout(playTimeout);\n        };\n        audioTag.addEventListener('canplay', handleCanPlay);\n        audioTag.addEventListener('play', handlePlay);\n        audioTag.srcObject = new MediaStream([audio?.persistentTrack]);\n\n        return () => {\n          audioTag?.removeEventListener('canplay', handleCanPlay);\n          audioTag?.removeEventListener('play', handlePlay);\n        };\n      }, [audio?.persistentTrack, onPlayFailed, sessionId, type]);\n\n      return (\n        <audio\n          autoPlay\n          ref={audioRef}\n          {...props}\n          data-session-id={sessionId}\n          data-audio-type={type}\n          data-subscribed={subscribedState}\n        />\n      );\n    }\n  )\n);\nDailyAudioTrack.displayName = 'DailyAudioTrack';\n","import React, {\n  forwardRef,\n  memo,\n  useCallback,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react';\nimport { useRecoilCallback } from 'recoil';\n\nimport { ExtendedDailyParticipant } from '../DailyParticipants';\nimport { useActiveSpeakerId } from '../hooks/useActiveSpeakerId';\nimport { useDaily } from '../hooks/useDaily';\nimport { useLocalSessionId } from '../hooks/useLocalSessionId';\nimport { useParticipantIds } from '../hooks/useParticipantIds';\nimport { participantPropertyState } from '../hooks/useParticipantProperty';\nimport { useScreenShare } from '../hooks/useScreenShare';\nimport { useThrottledDailyEvent } from '../hooks/useThrottledDailyEvent';\nimport { isTrackOff } from '../utils/isTrackOff';\nimport { DailyAudioPlayException, DailyAudioTrack } from './DailyAudioTrack';\n\ninterface Props {\n  /**\n   * When enabled and the call is configured for manual track subscriptions,\n   * DailyAudio will automatically subscribe to the active speaker's audio track.\n   */\n  autoSubscribeActiveSpeaker?: boolean;\n  /**\n   * Maximum amount of parallel speakers. Default: 5.\n   */\n  maxSpeakers?: number;\n  /**\n   * Callback to handle failed attempt to play audio.\n   */\n  onPlayFailed?(e: DailyAudioPlayException): void;\n  /**\n   * When enabled, plays audio from a local screenAudio track.\n   */\n  playLocalScreenAudio?: boolean;\n}\n\nexport interface DailyAudioHandle {\n  /**\n   * Returns all rendered audio elements.\n   */\n  getAllAudio(): HTMLAudioElement[];\n  /**\n   * Returns the audio element assigned to the current active speaker.\n   */\n  getActiveSpeakerAudio(): HTMLAudioElement | null;\n  /**\n   * Returns all rendered audio elements for rmpAudio tracks.\n   */\n  getRmpAudio(): HTMLAudioElement[];\n  /**\n   * Returns all rendered audio elements for screenAudio tracks.\n   */\n  getScreenAudio(): HTMLAudioElement[];\n  /**\n   * Returns the audio track for the given sessionId.\n   */\n  getAudioBySessionId(sessionId: string): HTMLAudioElement | null;\n  /**\n   * Returns the rmpAudio track for the given sessionId.\n   */\n  getRmpAudioBySessionId(sessionId: string): HTMLAudioElement | null;\n  /**\n   * Returns the screenAudio track for the given sessionId.\n   */\n  getScreenAudioBySessionId(sessionId: string): HTMLAudioElement | null;\n}\n\nexport const DailyAudio = memo(\n  forwardRef<DailyAudioHandle, Props>(\n    (\n      {\n        autoSubscribeActiveSpeaker = false,\n        maxSpeakers = 5,\n        onPlayFailed,\n        playLocalScreenAudio = false,\n      },\n      ref\n    ) => {\n      const daily = useDaily();\n      const [speakers, setSpeakers] = useState<string[]>(\n        new Array(maxSpeakers).fill('')\n      );\n      const { screens } = useScreenShare();\n      const localSessionId = useLocalSessionId();\n      const activeSpeakerId = useActiveSpeakerId({\n        ignoreLocal: true,\n      });\n\n      const containerRef = useRef<HTMLDivElement>(null);\n      useImperativeHandle(\n        ref,\n        () => ({\n          getActiveSpeakerAudio: () => {\n            return (\n              containerRef.current?.querySelector(\n                `audio[data-session-id=\"${activeSpeakerId}\"][data-audio-type=\"audio\"]`\n              ) ?? null\n            );\n          },\n          getAllAudio: () => {\n            return Array.from(\n              containerRef.current?.querySelectorAll('audio') ?? []\n            );\n          },\n          getAudioBySessionId: (id) => {\n            return (\n              containerRef.current?.querySelector(\n                `audio[data-session-id=\"${id}\"][data-audio-type=\"audio\"]`\n              ) ?? null\n            );\n          },\n          getRmpAudio: () => {\n            return Array.from(\n              containerRef.current?.querySelectorAll(\n                'audio[data-audio-type=\"rmpAudio\"]'\n              ) ?? []\n            );\n          },\n          getScreenAudio: () => {\n            return Array.from(\n              containerRef.current?.querySelectorAll(\n                'audio[data-audio-type=\"screenAudio\"]'\n              ) ?? []\n            );\n          },\n          getRmpAudioBySessionId: (id) => {\n            return (\n              containerRef.current?.querySelector(\n                `audio[data-session-id=\"${id}\"][data-audio-type=\"rmpAudio\"]`\n              ) ?? null\n            );\n          },\n          getScreenAudioBySessionId: (id) => {\n            return (\n              containerRef.current?.querySelector(\n                `audio[data-session-id=\"${id}\"][data-audio-type=\"screenAudio\"]`\n              ) ?? null\n            );\n          },\n        }),\n        [activeSpeakerId]\n      );\n\n      const assignSpeaker = useRecoilCallback(\n        ({ snapshot }) =>\n          async (sessionId: string) => {\n            /**\n             * Only consider remote participants with subscribed or staged audio.\n             */\n            const subscribedParticipants = Object.values(\n              daily?.participants() ?? {}\n            ).filter((p) => !p.local && Boolean(p.tracks.audio.subscribed));\n\n            const isSubscribed = (id: string) =>\n              subscribedParticipants.some((p) => p.session_id === id);\n\n            if (!isSubscribed(sessionId)) {\n              if (\n                daily &&\n                !daily.isDestroyed() &&\n                autoSubscribeActiveSpeaker &&\n                !daily.subscribeToTracksAutomatically()\n              ) {\n                daily.updateParticipant(sessionId, {\n                  setSubscribedTracks: {\n                    audio: true,\n                  },\n                });\n              } else {\n                return;\n              }\n            }\n\n            setSpeakers((prevSpeakers) => {\n              // New speaker is already present\n              if (prevSpeakers.includes(sessionId)) return prevSpeakers;\n\n              // Try to find a free slot: either unassigned or unsubscribed\n              const freeSlotCheck = (id: string) => !id || !isSubscribed(id);\n              if (prevSpeakers.some(freeSlotCheck)) {\n                const idx = prevSpeakers.findIndex(freeSlotCheck);\n                prevSpeakers[idx] = sessionId;\n                return [...prevSpeakers];\n              }\n\n              // From here on we can assume that all assigned audio tracks are subscribed.\n\n              // Try to find muted recent speaker\n              const mutedIdx = prevSpeakers.findIndex((id) =>\n                subscribedParticipants.some(\n                  (p) => p.session_id === id && isTrackOff(p.tracks.audio.state)\n                )\n              );\n              if (mutedIdx >= 0) {\n                prevSpeakers[mutedIdx] = sessionId;\n                return [...prevSpeakers];\n              }\n\n              // Find least recent non-active speaker and replace with new speaker\n              const speakerObjects = subscribedParticipants\n                .filter(\n                  (p) =>\n                    // Only consider participants currently assigned to speaker slots\n                    prevSpeakers.includes(p.session_id) &&\n                    // Don't replace current active participant, to avoid audio drop-outs\n                    p.session_id !== activeSpeakerId\n                )\n                .sort((a, b) => {\n                  const lastActiveA =\n                    snapshot.getLoadable(\n                      participantPropertyState({\n                        id: a.session_id,\n                        property: 'last_active',\n                      })\n                    ).contents ?? new Date('1970-01-01');\n                  const lastActiveB =\n                    snapshot.getLoadable(\n                      participantPropertyState({\n                        id: b.session_id,\n                        property: 'last_active',\n                      })\n                    ).contents ?? new Date('1970-01-01');\n                  if (lastActiveA > lastActiveB) return 1;\n                  if (lastActiveA < lastActiveB) return -1;\n                  return 0;\n                });\n\n              // No previous speaker in call anymore. Assign first free slot.\n              if (!speakerObjects.length) {\n                // Don't replace the active speaker. Instead find first non-active speaker slot.\n                const replaceIdx = prevSpeakers.findIndex(\n                  (id) => id !== activeSpeakerId\n                );\n                prevSpeakers[replaceIdx] = sessionId;\n                return [...prevSpeakers];\n              }\n\n              // Replace least recent speaker with new speaker\n              const replaceIdx = prevSpeakers.indexOf(\n                speakerObjects[0]?.session_id\n              );\n              prevSpeakers[replaceIdx] = sessionId;\n              return [...prevSpeakers];\n            });\n          },\n        [activeSpeakerId, autoSubscribeActiveSpeaker, daily]\n      );\n\n      /**\n       * Unassigns speaker from speaker slot, e.g. because participant left the call.\n       */\n      const removeSpeaker = useCallback((sessionId: string) => {\n        setSpeakers((prevSpeakers) => {\n          if (!prevSpeakers.includes(sessionId)) return prevSpeakers;\n          const newSpeakers = [...prevSpeakers];\n          const idx = newSpeakers.indexOf(sessionId);\n          newSpeakers[idx] = '';\n          return newSpeakers;\n        });\n      }, []);\n\n      useThrottledDailyEvent(\n        ['active-speaker-change', 'track-started', 'participant-left'],\n        useCallback(\n          (evts) => {\n            evts.forEach((ev) => {\n              switch (ev.action) {\n                case 'active-speaker-change':\n                  if (ev.activeSpeaker.peerId === localSessionId) return;\n                  assignSpeaker(ev.activeSpeaker.peerId);\n                  break;\n                case 'track-started':\n                  if (\n                    ev.track.kind === 'audio' &&\n                    ev.participant &&\n                    !ev.participant.local\n                  ) {\n                    assignSpeaker(ev.participant.session_id);\n                  }\n                  break;\n                case 'participant-left':\n                  removeSpeaker(ev.participant.session_id);\n                  break;\n              }\n            });\n          },\n          [assignSpeaker, localSessionId, removeSpeaker]\n        ),\n        200\n      );\n\n      const rmpAudioIds = useParticipantIds({\n        filter: useCallback(\n          (p: ExtendedDailyParticipant) => Boolean(p?.tracks?.rmpAudio),\n          []\n        ),\n      });\n\n      return (\n        <div ref={containerRef}>\n          {speakers.map((sessionId, idx) => (\n            <DailyAudioTrack\n              key={`speaker-slot-${idx}`}\n              onPlayFailed={onPlayFailed}\n              sessionId={sessionId}\n              type=\"audio\"\n            />\n          ))}\n          {screens\n            .filter((screen) => (playLocalScreenAudio ? true : !screen.local))\n            .map((screen) => (\n              <DailyAudioTrack\n                key={screen.screenId}\n                onPlayFailed={onPlayFailed}\n                sessionId={screen.session_id}\n                type=\"screenAudio\"\n              />\n            ))}\n          {rmpAudioIds.map((id) => (\n            <DailyAudioTrack\n              key={`${id}-rmp`}\n              onPlayFailed={onPlayFailed}\n              sessionId={id}\n              type=\"rmpAudio\"\n            />\n          ))}\n        </div>\n      );\n    }\n  )\n);\nDailyAudio.displayName = 'DailyAudio';\n","import React, { forwardRef, useEffect, useMemo, useRef } from 'react';\n\nimport { useLocalSessionId } from '../hooks/useLocalSessionId';\nimport { useMediaTrack } from '../hooks/useMediaTrack';\nimport useMergedRef from '../hooks/useMergedRef';\nimport { useParticipantProperty } from '../hooks/useParticipantProperty';\n\ninterface DailyVideoDimensions {\n  aspectRatio: number;\n  height: number;\n  width: number;\n}\n\ninterface Props\n  extends Omit<React.VideoHTMLAttributes<HTMLVideoElement>, 'onResize'> {\n  /**\n   * For local user-facing camera streams, we'll automatically mirror the video.\n   */\n  automirror?: boolean;\n  /**\n   * Defines whether the video should be fully contained or cover the box. Default: 'contain'.\n   */\n  fit?: 'contain' | 'cover';\n  /**\n   * Forces the video to be mirrored, if set.\n   */\n  mirror?: boolean;\n  /**\n   * Optional styles to apply, when video is playable.\n   */\n  playableStyle?: React.CSSProperties;\n  /**\n   * Optional callback, which is triggered whenever the video's rendered width or height changes.\n   * Returns the video's native width, height and aspectRatio.\n   */\n  onResize?(dimensions: DailyVideoDimensions): void;\n  /**\n   * Identifies the participant for which a video stream should be rendered.\n   */\n  sessionId: string;\n  /**\n   * Defines the track type being used.\n   */\n  type: 'video' | 'screenVideo' | 'rmpVideo';\n}\n\nexport const DailyVideo = forwardRef<HTMLVideoElement, Props>(\n  function DailyVideo(\n    {\n      automirror,\n      fit = 'contain',\n      mirror,\n      onResize,\n      playableStyle = {},\n      sessionId,\n      style = {},\n      type = 'video',\n      ...props\n    },\n    ref\n  ) {\n    const localSessionId = useLocalSessionId();\n    const isLocal = localSessionId === sessionId;\n    const isScreen = type === 'screenVideo';\n    const isLocalCam = isLocal && !isScreen;\n\n    const videoEl = useRef<HTMLVideoElement>(null);\n    const videoRef = useMergedRef<HTMLVideoElement>(videoEl, ref);\n\n    const videoState = useMediaTrack(sessionId, type);\n    const videoTrack = videoState.persistentTrack;\n    /**\n     * Considered as playable video:\n     * - local cam feed\n     * - any screen share\n     * - remote cam feed that is subscribed and reported as playable\n     */\n    const isPlayable = isLocalCam || isScreen || !videoState.isOff;\n    const trackState = useParticipantProperty(sessionId, `tracks.${type}`);\n    const subscribedState = trackState?.subscribed;\n\n    /**\n     * Determine if video needs to be mirrored.\n     */\n    const isMirrored = useMemo(() => {\n      if (typeof mirror === 'boolean') return mirror;\n      if (!automirror) return false;\n      if (!videoTrack) return isLocalCam;\n\n      const videoTrackSettings = videoTrack.getSettings();\n      const isUsersFrontCamera =\n        'facingMode' in videoTrackSettings\n          ? isLocalCam && videoTrackSettings.facingMode === 'user'\n          : isLocalCam;\n      // only apply mirror effect to user facing camera\n      return isUsersFrontCamera;\n    }, [automirror, isLocalCam, mirror, videoTrack]);\n\n    /**\n     * Handle canplay & picture-in-picture events.\n     */\n    useEffect(function setupVideoEvents() {\n      const video = videoEl.current;\n      if (!video) return;\n\n      const playVideo = () => {\n        const promise = video.play();\n        if (promise !== undefined) {\n          promise\n            .then(() => {\n              // All good, playback started.\n              video.controls = false;\n            })\n            .catch((error) => {\n              // Auto-play was prevented. Show video controls, so user can play video manually.\n              video.controls = true;\n              console.warn('Failed to play video', error);\n            });\n        }\n      };\n\n      const handleCanPlay = () => {\n        if (!video.paused) return;\n        playVideo();\n      };\n      const handleEnterPIP = () => {\n        video.style.transform = 'scale(1)';\n      };\n      const handleLeavePIP = () => {\n        video.style.transform = '';\n        setTimeout(() => {\n          if (video.paused) playVideo();\n        }, 100);\n      };\n      const handleVisibilityChange = () => {\n        if (document.visibilityState === 'hidden') return;\n        if (!video.paused) return;\n        playVideo();\n      };\n      video.addEventListener('canplay', handleCanPlay);\n      video.addEventListener('enterpictureinpicture', handleEnterPIP);\n      video.addEventListener('leavepictureinpicture', handleLeavePIP);\n\n      // Videos can be paused if media was played in another app on iOS.\n      // Resuming here, when returning back to Daily call.\n      document.addEventListener('visibilitychange', handleVisibilityChange);\n      return () => {\n        video.removeEventListener('canplay', handleCanPlay);\n        video.removeEventListener('enterpictureinpicture', handleEnterPIP);\n        video.removeEventListener('leavepictureinpicture', handleLeavePIP);\n        document.removeEventListener(\n          'visibilitychange',\n          handleVisibilityChange\n        );\n      };\n    }, []);\n\n    /**\n     * Update srcObject.\n     */\n    useEffect(\n      function updateSrcObject() {\n        const video = videoEl.current;\n        if (!video || !videoTrack) return;\n        video.srcObject = new MediaStream([videoTrack]);\n        video.load();\n        return () => {\n          // clean up when unmounted\n          video.srcObject = null;\n          video.load();\n        };\n      },\n      [videoTrack, videoTrack?.id]\n    );\n\n    /**\n     * Add optional event listener for resize event so the parent component\n     * can know the video's native aspect ratio.\n     */\n    useEffect(\n      function reportVideoDimensions() {\n        const video = videoEl.current;\n        if (!onResize || !video) return;\n\n        let frame: ReturnType<typeof requestAnimationFrame>;\n        function handleResize() {\n          if (frame) cancelAnimationFrame(frame);\n          frame = requestAnimationFrame(() => {\n            const video = videoEl.current;\n            if (!video || document.hidden) return;\n            const videoWidth = video.videoWidth;\n            const videoHeight = video.videoHeight;\n            if (videoWidth && videoHeight) {\n              onResize?.({\n                aspectRatio: videoWidth / videoHeight,\n                height: videoHeight,\n                width: videoWidth,\n              });\n            }\n          });\n        }\n\n        handleResize();\n        video.addEventListener('loadedmetadata', handleResize);\n        video.addEventListener('resize', handleResize);\n\n        return () => {\n          if (frame) cancelAnimationFrame(frame);\n          video.removeEventListener('loadedmetadata', handleResize);\n          video.removeEventListener('resize', handleResize);\n        };\n      },\n      [onResize]\n    );\n\n    return (\n      <video\n        autoPlay\n        muted\n        playsInline\n        ref={videoRef}\n        data-local={isLocal}\n        // Only set data-mirrored and data-playable when true\n        data-mirrored={isMirrored || undefined}\n        data-playable={isPlayable || undefined}\n        data-session-id={sessionId}\n        data-subscribed={subscribedState}\n        data-video-type={type}\n        style={{\n          objectFit: fit,\n          transform: isMirrored ? 'scale(-1, 1)' : '',\n          ...style,\n          ...(isPlayable ? playableStyle : {}),\n        }}\n        {...props}\n      />\n    );\n  }\n);\nDailyVideo.displayName = 'DailyVideo';\n","import { createContext } from 'react';\n\ninterface DevicesContextValue {\n  refreshDevices(): Promise<void>;\n}\n\nexport const DailyDevicesContext = createContext<DevicesContextValue>({\n  refreshDevices: () => Promise.resolve(),\n});\n","import {\n  DailyCameraErrorObject,\n  DailyCameraErrorType,\n} from '@daily-co/daily-js';\nimport React, { useCallback } from 'react';\nimport { atom, useRecoilCallback } from 'recoil';\n\nimport { DailyDevicesContext } from './DailyDevicesContext';\nimport { useDaily } from './hooks/useDaily';\nimport { useDailyEvent } from './hooks/useDailyEvent';\nimport { RECOIL_PREFIX } from './lib/constants';\n\ntype GeneralState =\n  | 'idle'\n  | 'pending'\n  | 'not-supported'\n  | 'granted'\n  | 'blocked'\n  | 'in-use'\n  | 'not-found'\n  | 'constraints-invalid'\n  | 'constraints-none-specified'\n  | 'undefined-mediadevices'\n  | 'unknown';\n\ntype DeviceState = 'granted' | 'in-use';\nexport interface StatefulDevice {\n  device: MediaDeviceInfo;\n  selected: boolean;\n  state: DeviceState;\n}\n\nexport const generalCameraState = atom<GeneralState>({\n  key: RECOIL_PREFIX + 'general-camera-state',\n  default: 'idle',\n});\nexport const generalMicrophoneState = atom<GeneralState>({\n  key: RECOIL_PREFIX + 'general-microphone-state',\n  default: 'idle',\n});\nexport const cameraDevicesState = atom<StatefulDevice[]>({\n  key: RECOIL_PREFIX + 'camera-devices',\n  default: [],\n});\nexport const microphoneDevicesState = atom<StatefulDevice[]>({\n  key: RECOIL_PREFIX + 'microphone-devices',\n  default: [],\n});\nexport const speakerDevicesState = atom<StatefulDevice[]>({\n  key: RECOIL_PREFIX + 'speaker-devices',\n  default: [],\n});\nexport const lastCameraErrorState =\n  atom<DailyCameraErrorObject<DailyCameraErrorType> | null>({\n    key: RECOIL_PREFIX + 'last-camera-error',\n    default: null,\n  });\n\nexport const DailyDevices: React.FC<React.PropsWithChildren<unknown>> = ({\n  children,\n}) => {\n  const daily = useDaily();\n\n  /**\n   * Refreshes list of available devices using enumerateDevices.\n   * Previous device states are kept in place, otherwise states are initialized as 'granted'.\n   */\n  const refreshDevices = useRecoilCallback(\n    ({ transact_UNSTABLE }) =>\n      async () => {\n        /**\n         * Check for legacy browsers.\n         */\n        if (\n          typeof navigator?.mediaDevices?.getUserMedia === 'undefined' ||\n          typeof navigator?.mediaDevices?.enumerateDevices === 'undefined'\n        ) {\n          transact_UNSTABLE(({ set }) => {\n            set(generalCameraState, 'not-supported');\n            set(generalMicrophoneState, 'not-supported');\n          });\n          return;\n        }\n\n        if (!daily) return;\n\n        try {\n          const { devices } = await daily.enumerateDevices();\n          /**\n           * Filter out \"empty\" devices for when device access has not been granted (yet).\n           */\n          const cams = devices.filter(\n            (d) => d.kind === 'videoinput' && d.deviceId !== ''\n          );\n          const mics = devices.filter(\n            (d) => d.kind === 'audioinput' && d.deviceId !== ''\n          );\n          const speakers = devices.filter(\n            (d) => d.kind === 'audiooutput' && d.deviceId !== ''\n          );\n          const { camera, mic, speaker } = await daily.getInputDevices();\n\n          const mapDevice = (\n            device: {} | MediaDeviceInfo,\n            d: MediaDeviceInfo,\n            prevDevices: StatefulDevice[]\n          ) => ({\n            device: d,\n            selected: 'deviceId' in device && d.deviceId === device.deviceId,\n            state:\n              prevDevices.find((p) => p.device.deviceId === d.deviceId)\n                ?.state ?? 'granted',\n          });\n          const sortDeviceByLabel = (a: StatefulDevice, b: StatefulDevice) => {\n            if (a.device.deviceId === 'default') return -1;\n            if (b.device.deviceId === 'default') return 1;\n            if (a.device.label < b.device.label) return -1;\n            if (a.device.label > b.device.label) return 1;\n            return 0;\n          };\n\n          transact_UNSTABLE(({ set }) => {\n            set(cameraDevicesState, (prevCams) =>\n              cams\n                .filter(Boolean)\n                .map<StatefulDevice>((d) => mapDevice(camera, d, prevCams))\n                .sort(sortDeviceByLabel)\n            );\n            set(microphoneDevicesState, (prevMics) =>\n              mics\n                .filter(Boolean)\n                .map<StatefulDevice>((d) => mapDevice(mic, d, prevMics))\n                .sort(sortDeviceByLabel)\n            );\n            set(speakerDevicesState, (prevSpeakers) =>\n              speakers\n                .filter(Boolean)\n                .map<StatefulDevice>((d) => mapDevice(speaker, d, prevSpeakers))\n                .sort(sortDeviceByLabel)\n            );\n          });\n        } catch (e) {\n          transact_UNSTABLE(({ set }) => {\n            set(generalCameraState, 'not-supported');\n            set(generalMicrophoneState, 'not-supported');\n          });\n        }\n      },\n    [daily]\n  );\n\n  /**\n   * Updates general and specific device states, based on blocked status.\n   */\n  const updateDeviceStates = useRecoilCallback(\n    ({ set, snapshot, transact_UNSTABLE }) =>\n      async () => {\n        if (!daily) return;\n\n        const currentCamState = await snapshot.getPromise(generalCameraState);\n        const currentMicState = await snapshot.getPromise(\n          generalMicrophoneState\n        );\n\n        const participants = daily.participants();\n        // Guard against potentially uninitialized local participant\n        if (!participants.local) return;\n\n        const { tracks } = participants.local;\n\n        let camPermissionState: PermissionState = 'prompt';\n        let micPermissionState: PermissionState = 'prompt';\n        if (navigator.permissions) {\n          try {\n            const camPermission = await navigator.permissions.query({\n              // @ts-ignore\n              name: 'camera',\n            });\n            camPermissionState = camPermission.state;\n            const micPermission = await navigator.permissions.query({\n              // @ts-ignore\n              name: 'microphone',\n            });\n            micPermissionState = micPermission.state;\n          } catch {\n            // Permissions query not available\n          }\n        }\n\n        const awaitingCamAccess =\n          camPermissionState === 'prompt' &&\n          ['idle', 'pending'].includes(currentCamState) &&\n          tracks.video.state === 'interrupted' &&\n          !tracks.video.persistentTrack;\n        const initialCamOff =\n          ['idle', 'pending'].includes(currentCamState) &&\n          !tracks.video.persistentTrack &&\n          Boolean(tracks.video.off?.byUser);\n        const awaitingMicAccess =\n          micPermissionState === 'prompt' &&\n          ['idle', 'pending'].includes(currentMicState) &&\n          tracks.audio.state === 'interrupted' &&\n          !tracks.audio.persistentTrack;\n        const initialMicOff =\n          ['idle', 'pending'].includes(currentMicState) &&\n          !tracks.audio.persistentTrack &&\n          Boolean(tracks.audio.off?.byUser);\n\n        if (tracks.audio?.blocked?.byDeviceInUse) {\n          transact_UNSTABLE(({ set }) => {\n            set(generalMicrophoneState, 'in-use');\n            set(microphoneDevicesState, (mics) =>\n              mics.map<StatefulDevice>((m) =>\n                m.selected ? { ...m, state: 'in-use' } : m\n              )\n            );\n          });\n        } else if (tracks.audio?.blocked?.byDeviceMissing) {\n          set(generalMicrophoneState, 'not-found');\n        } else if (\n          tracks.audio?.blocked?.byPermissions ||\n          micPermissionState === 'denied'\n        ) {\n          set(generalMicrophoneState, 'blocked');\n        } else if (awaitingMicAccess) {\n          set(generalMicrophoneState, 'pending');\n        } else if (initialMicOff) {\n          set(generalMicrophoneState, 'idle');\n        } else {\n          transact_UNSTABLE(({ set }) => {\n            set(generalMicrophoneState, 'granted');\n            set(microphoneDevicesState, (mics) =>\n              mics.map<StatefulDevice>((m) =>\n                m.selected ? { ...m, state: 'granted' } : m\n              )\n            );\n          });\n        }\n\n        if (tracks.video?.blocked?.byDeviceInUse) {\n          transact_UNSTABLE(({ set }) => {\n            set(generalCameraState, 'in-use');\n            set(cameraDevicesState, (cams) =>\n              cams.map<StatefulDevice>((m) =>\n                m.selected ? { ...m, state: 'in-use' } : m\n              )\n            );\n          });\n        } else if (tracks.video?.blocked?.byDeviceMissing) {\n          set(generalCameraState, 'not-found');\n        } else if (\n          tracks.video?.blocked?.byPermissions ||\n          camPermissionState === 'denied'\n        ) {\n          set(generalCameraState, 'blocked');\n        } else if (awaitingCamAccess) {\n          set(generalCameraState, 'pending');\n        } else if (initialCamOff) {\n          set(generalCameraState, 'idle');\n        } else {\n          transact_UNSTABLE(({ set }) => {\n            set(generalCameraState, 'granted');\n            set(cameraDevicesState, (cams) =>\n              cams.map<StatefulDevice>((m) =>\n                m.selected ? { ...m, state: 'granted' } : m\n              )\n            );\n          });\n        }\n        refreshDevices();\n      },\n    [daily, refreshDevices]\n  );\n\n  useDailyEvent(\n    'participant-updated',\n    useCallback(\n      (ev) => {\n        if (!ev.participant.local) return;\n        updateDeviceStates();\n      },\n      [updateDeviceStates]\n    )\n  );\n\n  useDailyEvent('available-devices-updated', refreshDevices);\n  useDailyEvent('selected-devices-updated', refreshDevices);\n\n  useDailyEvent(\n    'camera-error',\n    useRecoilCallback(\n      ({ transact_UNSTABLE }) =>\n        (ev) => {\n          transact_UNSTABLE(({ set }) => {\n            set(lastCameraErrorState, ev.error);\n            switch (ev.error?.type) {\n              case 'cam-in-use':\n                set(generalCameraState, 'in-use');\n                break;\n              case 'mic-in-use':\n                set(generalMicrophoneState, 'in-use');\n                break;\n              case 'cam-mic-in-use':\n                set(generalCameraState, 'in-use');\n                set(generalMicrophoneState, 'in-use');\n                break;\n              case 'not-found':\n                if (ev.error?.missingMedia.includes('video'))\n                  set(generalCameraState, 'not-found');\n                if (ev.error?.missingMedia.includes('audio'))\n                  set(generalMicrophoneState, 'not-found');\n                break;\n              case 'permissions':\n                if (ev.error?.blockedMedia.includes('video'))\n                  set(generalCameraState, 'blocked');\n                if (ev.error?.blockedMedia.includes('audio'))\n                  set(generalMicrophoneState, 'blocked');\n                break;\n              case 'constraints':\n                if (ev.error?.reason === 'invalid') {\n                  set(generalCameraState, 'constraints-invalid');\n                  set(generalMicrophoneState, 'constraints-invalid');\n                } else if (ev.error?.reason === 'none-specified') {\n                  set(generalCameraState, 'constraints-none-specified');\n                  set(generalMicrophoneState, 'constraints-none-specified');\n                }\n                break;\n              case 'undefined-mediadevices':\n                set(generalCameraState, 'undefined-mediadevices');\n                set(generalMicrophoneState, 'undefined-mediadevices');\n                break;\n              case 'unknown':\n              default:\n                set(generalCameraState, 'unknown');\n                set(generalMicrophoneState, 'unknown');\n                break;\n            }\n          });\n        },\n      []\n    )\n  );\n\n  /**\n   * Update all device state, when camera is started.\n   */\n  useDailyEvent(\n    'started-camera',\n    useRecoilCallback(\n      ({ transact_UNSTABLE }) =>\n        () => {\n          transact_UNSTABLE(({ set }) => {\n            set(generalCameraState, 'granted');\n            set(generalMicrophoneState, 'granted');\n          });\n          updateDeviceStates();\n        },\n      [updateDeviceStates]\n    )\n  );\n\n  return (\n    <DailyDevicesContext.Provider value={{ refreshDevices }}>\n      {children}\n    </DailyDevicesContext.Provider>\n  );\n};\n","import { DailyStreamingLayoutConfig } from '@daily-co/daily-js';\nimport React from 'react';\nimport { atom, useRecoilCallback } from 'recoil';\n\nimport { useDailyEvent } from './hooks/useDailyEvent';\nimport { RECOIL_PREFIX } from './lib/constants';\n\ninterface LiveStreamingState {\n  errorMsg?: string;\n  isLiveStreaming: boolean;\n  layout?: DailyStreamingLayoutConfig;\n}\n\nexport const liveStreamingState = atom<LiveStreamingState>({\n  key: RECOIL_PREFIX + 'live-streaming',\n  default: {\n    errorMsg: undefined,\n    isLiveStreaming: false,\n    layout: undefined,\n  },\n});\n\nexport const DailyLiveStreaming: React.FC<React.PropsWithChildren<unknown>> = ({\n  children,\n}) => {\n  useDailyEvent(\n    'live-streaming-started',\n    useRecoilCallback(\n      ({ set }) =>\n        (ev) => {\n          set(liveStreamingState, {\n            isLiveStreaming: true,\n            layout: ev?.layout,\n          });\n        },\n      []\n    )\n  );\n\n  useDailyEvent(\n    'live-streaming-stopped',\n    useRecoilCallback(\n      ({ set }) =>\n        () => {\n          set(liveStreamingState, (prevState) => ({\n            ...prevState,\n            isLiveStreaming: false,\n            layout: undefined,\n          }));\n        },\n      []\n    )\n  );\n\n  useDailyEvent(\n    'live-streaming-error',\n    useRecoilCallback(\n      ({ set }) =>\n        (ev) => {\n          set(liveStreamingState, (prevState) => ({\n            ...prevState,\n            errorMsg: ev.errorMsg,\n          }));\n        },\n      []\n    )\n  );\n\n  useDailyEvent(\n    'left-meeting',\n    useRecoilCallback(\n      ({ reset }) =>\n        () => {\n          reset(liveStreamingState);\n        },\n      []\n    )\n  );\n\n  return <>{children}</>;\n};\n","import {\n  DailyEventObjectFatalError,\n  DailyEventObjectNonFatalError,\n  DailyMeetingSessionState,\n  DailyMeetingState,\n} from '@daily-co/daily-js';\nimport React from 'react';\nimport { atom, useRecoilCallback } from 'recoil';\n\nimport { useDaily } from './hooks/useDaily';\nimport { useDailyEvent } from './hooks/useDailyEvent';\nimport { RECOIL_PREFIX } from './lib/constants';\n\nexport const meetingStateState = atom<DailyMeetingState>({\n  key: RECOIL_PREFIX + 'meeting-state',\n  default: 'new',\n});\n\nexport const meetingErrorState = atom<DailyEventObjectFatalError | null>({\n  key: RECOIL_PREFIX + 'meeting-error',\n  default: null,\n});\n\nexport const nonFatalErrorState = atom<DailyEventObjectNonFatalError | null>({\n  key: RECOIL_PREFIX + 'non-fatal-error',\n  default: null,\n});\n\nexport const meetingSessionDataState = atom<DailyMeetingSessionState>({\n  key: 'meeting-session-data',\n  default: {\n    data: undefined,\n    topology: 'none',\n  },\n});\n\nexport const DailyMeeting: React.FC<React.PropsWithChildren<{}>> = ({\n  children,\n}) => {\n  const daily = useDaily();\n\n  /**\n   * Updates meeting state.\n   */\n  const updateMeetingState = useRecoilCallback(\n    ({ set }) =>\n      () => {\n        if (!daily) return;\n        const meetingState = daily.meetingState();\n        set(meetingStateState, meetingState);\n        return meetingState;\n      },\n    [daily]\n  );\n\n  useDailyEvent('loading', updateMeetingState);\n  useDailyEvent('loaded', updateMeetingState);\n  useDailyEvent('joining-meeting', updateMeetingState);\n  useDailyEvent('joined-meeting', updateMeetingState);\n  useDailyEvent('left-meeting', updateMeetingState);\n  useDailyEvent(\n    'error',\n    useRecoilCallback(\n      ({ set }) =>\n        (ev) => {\n          set(meetingErrorState, ev);\n          updateMeetingState();\n        },\n      [updateMeetingState]\n    )\n  );\n  useDailyEvent(\n    'nonfatal-error',\n    useRecoilCallback(\n      ({ set }) =>\n        (ev) => {\n          set(nonFatalErrorState, ev);\n        },\n      []\n    )\n  );\n\n  /**\n   * Updates meeting session state.\n   */\n  const initMeetingSessionState = useRecoilCallback(\n    ({ set }) =>\n      () => {\n        if (!daily) return;\n        set(meetingSessionDataState, daily.meetingSessionState());\n      },\n    [daily]\n  );\n\n  /**\n   * Initialize state when joined meeting or setting up the hook.\n   */\n  useDailyEvent('joined-meeting', initMeetingSessionState);\n\n  /**\n   * Update Recoil state whenever meeting session state is updated.\n   */\n  useDailyEvent(\n    'meeting-session-state-updated',\n    useRecoilCallback(\n      ({ set }) =>\n        (ev) => {\n          set(meetingSessionDataState, ev.meetingSessionState);\n        },\n      []\n    )\n  );\n\n  /**\n   * Reset Recoil state when meeting ends.\n   */\n  useDailyEvent(\n    'left-meeting',\n    useRecoilCallback(\n      ({ reset }) =>\n        () => {\n          reset(meetingSessionDataState);\n        },\n      []\n    )\n  );\n\n  /**\n   * Reset Recoil state when call instance is destroyed.\n   */\n  useDailyEvent(\n    'call-instance-destroyed',\n    useRecoilCallback(\n      ({ transact_UNSTABLE }) =>\n        () => {\n          transact_UNSTABLE(({ reset }) => {\n            reset(meetingStateState);\n            reset(meetingErrorState);\n            reset(nonFatalErrorState);\n            reset(meetingSessionDataState);\n          });\n        },\n      []\n    )\n  );\n\n  return <>{children}</>;\n};\n","import { DailyNetworkStats, DailyNetworkTopology } from '@daily-co/daily-js';\nimport React, { useEffect } from 'react';\nimport { atom, useRecoilCallback, useRecoilValue } from 'recoil';\n\nimport { useDaily } from './hooks/useDaily';\nimport { useDailyEvent } from './hooks/useDailyEvent';\nimport { RECOIL_PREFIX } from './lib/constants';\n\nexport const topologyState = atom<DailyNetworkTopology | 'none'>({\n  key: RECOIL_PREFIX + 'topology',\n  default: 'none',\n});\nexport const networkQualityState = atom<DailyNetworkStats['quality']>({\n  key: RECOIL_PREFIX + 'networkQuality',\n  default: 100,\n});\nexport const networkThresholdState = atom<DailyNetworkStats['threshold']>({\n  key: RECOIL_PREFIX + 'networkThreshold',\n  default: 'good',\n});\n\nexport const DailyNetwork: React.FC<React.PropsWithChildren<{}>> = ({\n  children,\n}) => {\n  const daily = useDaily();\n\n  const topology = useRecoilValue(topologyState);\n\n  const initTopology = useRecoilCallback(\n    ({ set }) =>\n      async () => {\n        if (!daily) return;\n        const topology = await daily.getNetworkTopology();\n        if (!topology || topology?.topology === 'none') return;\n        set(topologyState, topology.topology);\n      },\n    [daily]\n  );\n\n  useDailyEvent('joined-meeting', initTopology);\n  useDailyEvent(\n    'network-connection',\n    useRecoilCallback(\n      ({ set }) =>\n        (ev) => {\n          switch (ev.event) {\n            case 'connected':\n              if (ev.type === 'peer-to-peer') set(topologyState, 'peer');\n              if (ev.type === 'sfu') set(topologyState, 'sfu');\n              break;\n          }\n        },\n      []\n    )\n  );\n  useDailyEvent(\n    'network-quality-change',\n    useRecoilCallback(\n      ({ transact_UNSTABLE }) =>\n        (ev) => {\n          transact_UNSTABLE(({ set }) => {\n            set(networkQualityState, (prevQuality) =>\n              prevQuality !== ev.quality ? ev.quality : prevQuality\n            );\n            set(networkThresholdState, (prevThreshold) =>\n              prevThreshold !== ev.threshold ? ev.threshold : prevThreshold\n            );\n          });\n        },\n      []\n    )\n  );\n\n  useDailyEvent(\n    'left-meeting',\n    useRecoilCallback(\n      ({ transact_UNSTABLE }) =>\n        () => {\n          transact_UNSTABLE(({ reset }) => {\n            reset(topologyState);\n            reset(networkQualityState);\n            reset(networkThresholdState);\n          });\n        },\n      []\n    )\n  );\n\n  useEffect(() => {\n    if (!daily || topology !== 'none') return;\n    initTopology();\n  }, [daily, initTopology, topology]);\n\n  return <>{children}</>;\n};\n","import { DailyStreamingLayoutConfig } from '@daily-co/daily-js';\nimport React, { useEffect } from 'react';\nimport { atom, useRecoilCallback, useSetRecoilState } from 'recoil';\n\nimport { useDailyEvent } from './hooks/useDailyEvent';\nimport { useLocalSessionId } from './hooks/useLocalSessionId';\nimport { useParticipantIds } from './hooks/useParticipantIds';\nimport { RECOIL_PREFIX } from './lib/constants';\n\ninterface RecordingState {\n  /**\n   * Determines whether an error occurred during the last recording attempt.\n   */\n  error?: boolean;\n  /**\n   * Determines whether the local participant is being recorded, based on the recording settings.\n   */\n  isLocalParticipantRecorded: boolean;\n  /**\n   * Determines whether a recording is currently running or not.\n   */\n  isRecording: boolean;\n  /**\n   * Contains the last applied cloud recording layout config.\n   */\n  layout?: DailyStreamingLayoutConfig;\n  /**\n   * Determines whether the recording is running locally.\n   * See [enable_recording](https://docs.daily.co/reference/rest-api/rooms/config#enable_recording).\n   */\n  local?: boolean;\n  /**\n   * Contains the recording id.\n   */\n  recordingId?: string;\n  /**\n   * Contains the date when the 'recording-started' event was received.\n   * This doesn't necessarily match the date the recording was actually started.\n   */\n  recordingStartedDate?: Date;\n  /**\n   * Contains the session_id of the participant who started the recording.\n   */\n  startedBy?: string;\n  /**\n   * Contains the recording type.\n   * See [enable_recording](https://docs.daily.co/reference/rest-api/rooms/config#enable_recording).\n   */\n  type?: string;\n}\n\nexport const recordingState = atom<RecordingState>({\n  key: RECOIL_PREFIX + 'recording',\n  default: {\n    isLocalParticipantRecorded: false,\n    isRecording: false,\n  },\n});\n\nexport const DailyRecordings: React.FC<React.PropsWithChildren<unknown>> = ({\n  children,\n}) => {\n  const setState = useSetRecoilState(recordingState);\n\n  const localSessionId = useLocalSessionId();\n\n  const recordingParticipantIds = useParticipantIds({\n    filter: 'record',\n  });\n  /**\n   * Update recording state, whenever amount of recording participants changes.\n   */\n  useEffect(() => {\n    const hasRecordingParticipants = recordingParticipantIds.length > 0;\n    const isLocalParticipantRecording = recordingParticipantIds.includes(\n      localSessionId || 'local'\n    );\n    setState((s) => ({\n      ...s,\n      // In case type is local or not set, determine based on recording participants\n      isLocalParticipantRecorded:\n        s?.type === 'local' || !s?.type\n          ? hasRecordingParticipants\n          : s.isLocalParticipantRecorded,\n      isRecording:\n        s?.type === 'local' || !s?.type\n          ? hasRecordingParticipants\n          : s.isRecording,\n      local:\n        (s?.type === 'local' || !s?.type) && hasRecordingParticipants\n          ? isLocalParticipantRecording\n          : s?.local,\n      /**\n       * Set type in case recording participants are detected.\n       * We only set `record` on participants, when recording type is 'local'.\n       */\n      type: hasRecordingParticipants ? 'local' : s?.type,\n    }));\n  }, [localSessionId, recordingParticipantIds, setState]);\n\n  useDailyEvent(\n    'recording-started',\n    useRecoilCallback(\n      ({ set }) =>\n        (ev) => {\n          let isLocalParticipantRecorded = true;\n          switch (ev.type) {\n            case 'cloud-beta':\n            case 'cloud': {\n              if (\n                localSessionId &&\n                ev.layout?.preset === 'single-participant' &&\n                ev.layout.session_id !== localSessionId\n              ) {\n                isLocalParticipantRecorded = false;\n              }\n              break;\n            }\n          }\n          set(recordingState, {\n            error: false,\n            isLocalParticipantRecorded,\n            isRecording: true,\n            layout: ev?.layout,\n            local: ev?.local,\n            recordingId: ev?.recordingId,\n            recordingStartedDate: new Date(),\n            startedBy: ev?.startedBy,\n            type: ev?.type,\n          });\n        },\n      [localSessionId]\n    )\n  );\n  useDailyEvent(\n    'recording-stopped',\n    useRecoilCallback(\n      ({ set }) =>\n        () => {\n          set(recordingState, (prevState) => ({\n            ...prevState,\n            isLocalParticipantRecorded: false,\n            isRecording: false,\n          }));\n        },\n      []\n    )\n  );\n  useDailyEvent(\n    'recording-error',\n    useRecoilCallback(\n      ({ set }) =>\n        () => {\n          set(recordingState, (prevState) => ({\n            ...prevState,\n            error: true,\n            isLocalParticipantRecorded: false,\n            isRecording: false,\n          }));\n        },\n      []\n    )\n  );\n  useDailyEvent(\n    'left-meeting',\n    useRecoilCallback(\n      ({ reset }) =>\n        () => {\n          reset(recordingState);\n        },\n      []\n    )\n  );\n  return <>{children}</>;\n};\n","import { DailyMeetingState } from '@daily-co/daily-js';\nimport { useDebugValue } from 'react';\nimport { useRecoilValue } from 'recoil';\n\nimport { meetingStateState } from '../DailyMeeting';\n\n/**\n * Returns a meeting's current state.\n */\nexport const useMeetingState = (): DailyMeetingState | null => {\n  const meetingState = useRecoilValue(meetingStateState);\n  useDebugValue(meetingState);\n  return meetingState;\n};\n","import { DailyRoomInfo } from '@daily-co/daily-js';\nimport React from 'react';\nimport { atom, useRecoilCallback } from 'recoil';\n\nimport { useDaily } from './hooks/useDaily';\nimport { useDailyEvent } from './hooks/useDailyEvent';\nimport { useMeetingState } from './hooks/useMeetingState';\nimport { RECOIL_PREFIX } from './lib/constants';\n\nexport const roomState = atom<DailyRoomInfo | null>({\n  key: RECOIL_PREFIX + 'room',\n  default: null,\n});\n\nexport const DailyRoom: React.FC<React.PropsWithChildren<{}>> = ({\n  children,\n}) => {\n  const daily = useDaily();\n  const meetingState = useMeetingState();\n\n  const updateRoom = useRecoilCallback(\n    ({ set }) =>\n      async () => {\n        if (!daily || meetingState === 'left-meeting') return;\n        const room = await daily.room();\n        if (room && 'id' in room) {\n          set(roomState, room);\n        }\n        return room;\n      },\n    [daily, meetingState]\n  );\n\n  useDailyEvent('access-state-updated', updateRoom);\n\n  useDailyEvent(\n    'left-meeting',\n    useRecoilCallback(\n      ({ reset }) =>\n        () => {\n          reset(roomState);\n        },\n      []\n    )\n  );\n\n  return <>{children}</>;\n};\n","import {\n  DailyEventObjectAppMessage,\n  DailyTranscriptionDeepgramOptions,\n} from '@daily-co/daily-js';\nimport React from 'react';\nimport { atom, useRecoilCallback } from 'recoil';\n\nimport { useDailyEvent } from './hooks/useDailyEvent';\nimport { RECOIL_PREFIX } from './lib/constants';\n\nexport interface Transcription {\n  session_id: string;\n  user_id: string;\n  text: string;\n  timestamp: string;\n  // Deprecated\n  is_final: boolean;\n}\n\ninterface TranscriptionState extends DailyTranscriptionDeepgramOptions {\n  /**\n   * Determines whether an error occurred during the last transcription attempt.\n   */\n  error?: boolean;\n  /**\n   * Determines whether a transcription is currently running or not.\n   */\n  isTranscribing: boolean;\n  /**\n   * Contains the date when the 'transcription-started' event was received.\n   * This doesn't necessarily match the date the transcription was actually started.\n   */\n  transcriptionStartDate?: Date;\n  /**\n   * Contains the session_id of the participant who started the transcription.\n   */\n  startedBy?: string;\n  /**\n   * Contains the session_id of the participant who updated the transcription.\n   */\n  updatedBy?: string;\n  /**\n   * Contains the transcriptions that we received.\n   */\n  transcriptions: Transcription[];\n}\n\nexport const transcriptionState = atom<TranscriptionState>({\n  key: RECOIL_PREFIX + 'transcription',\n  default: {\n    isTranscribing: false,\n    model: 'general',\n    language: 'en',\n    transcriptions: [],\n  },\n});\n\nexport const DailyTranscriptions: React.FC<React.PropsWithChildren<{}>> = ({\n  children,\n}) => {\n  useDailyEvent(\n    'transcription-started',\n    useRecoilCallback(\n      ({ set }) =>\n        (ev) => {\n          set(transcriptionState, {\n            error: false,\n            isTranscribing: true,\n            transcriptionStartDate: new Date(),\n            transcriptions: [],\n            ...ev,\n          });\n        },\n      []\n    )\n  );\n  useDailyEvent(\n    'transcription-stopped',\n    useRecoilCallback(\n      ({ set }) =>\n        (ev) => {\n          set(transcriptionState, (prevState) => ({\n            ...prevState,\n            updatedBy: ev?.updatedBy,\n            isTranscribing: false,\n          }));\n        },\n      []\n    )\n  );\n  useDailyEvent(\n    'transcription-error',\n    useRecoilCallback(\n      ({ set }) =>\n        () => {\n          set(transcriptionState, (prevState) => ({\n            ...prevState,\n            error: true,\n            isTranscribing: false,\n          }));\n        },\n      []\n    )\n  );\n  useDailyEvent(\n    'left-meeting',\n    useRecoilCallback(\n      ({ set }) =>\n        () => {\n          set(transcriptionState, (prevState) => ({\n            ...prevState,\n            isTranscribing: false,\n          }));\n        },\n      []\n    )\n  );\n  useDailyEvent(\n    'app-message',\n    useRecoilCallback(\n      ({ set }) =>\n        (ev: DailyEventObjectAppMessage<Transcription>) => {\n          if (ev?.fromId === 'transcription') {\n            set(transcriptionState, (prevState) => ({\n              ...prevState,\n              // setting it to true whenever a new message is received\n              // as the participants who joined after the transcription-started event\n              // won't be knowing if transcription is started or not\n              isTranscribing: true,\n              transcriptions: [...prevState.transcriptions, ev.data],\n            }));\n          }\n        },\n      []\n    )\n  );\n\n  return <>{children}</>;\n};\n","import Daily, { DailyCall, DailyFactoryOptions } from '@daily-co/daily-js';\nimport { MutableRefObject, useEffect, useRef, useState } from 'react';\n\nimport { customDeepEqual } from '../lib/customDeepEqual';\n\ntype InstanceType = 'callFrame' | 'callObject';\n\nconst defaultOptions: DailyFactoryOptions = {};\nconst defaultShouldCreateInstance = () => true;\n\nexport interface Props {\n  parentElRef?: MutableRefObject<HTMLElement>;\n  options?: DailyFactoryOptions;\n  shouldCreateInstance?(): boolean;\n}\n\nconst defaultProps: Props = {\n  options: defaultOptions,\n  shouldCreateInstance: defaultShouldCreateInstance,\n};\n\n/**\n * Helper hook to maintain custom call instances in React codebases.\n */\nexport const useCallInstance = (\n  type: InstanceType,\n  {\n    parentElRef,\n    options = defaultOptions,\n    shouldCreateInstance = defaultShouldCreateInstance,\n  }: Props = defaultProps\n) => {\n  const [callInstance, setCallInstance] = useState<DailyCall | null>(null);\n\n  /**\n   * Holds last used props when callObject instance was created.\n   */\n  const lastUsedOptions = useRef<DailyFactoryOptions>();\n  useEffect(() => {\n    /**\n     * Call frame instances with a defined parentEl likely pass a ref.\n     * Typically a DOM ref is initialized with useRef(null).\n     * We'll want to wait until parentEl is defined, meaning that the ref is\n     * correctly wired up with a DOM element.\n     * Otherwise we'll just check shouldCreateInstance().\n     */\n    if (\n      (type === 'callFrame' && parentElRef?.current === null) ||\n      !shouldCreateInstance()\n    )\n      return;\n\n    async function destroyCallInstance(co: DailyCall) {\n      await co.destroy();\n    }\n\n    /**\n     * Once instance is destroyed, nullify callInstance, so a new one can be created.\n     */\n    const handleDestroyedInstance = () => {\n      /**\n       * Setting a timeout makes sure the destruction and creation\n       * of call instances happen in separate call stacks.\n       * Otherwise there's a risk for duplicate call instances.\n       */\n      setTimeout(() => setCallInstance(null), 0);\n    };\n\n    let co = Daily.getCallInstance();\n\n    /**\n     * In case a call instance exists outside of this hook instance's knowledge,\n     * store it in state.\n     */\n    if (!callInstance && co && !co.isDestroyed()) {\n      co.once('call-instance-destroyed', handleDestroyedInstance);\n      setCallInstance(co);\n      return;\n    }\n\n    /**\n     * callInstance exists.\n     */\n    if (callInstance) {\n      /**\n       * Props have changed. Destroy current instance, so a new one can be created.\n       */\n      if (!customDeepEqual(lastUsedOptions.current, options)) {\n        destroyCallInstance(callInstance);\n      }\n      /**\n       * Return early.\n       */\n      return;\n    }\n\n    if (!co || co.isDestroyed()) {\n      /**\n       * callInstance doesn't exist or is destroyed (TODO: Check why getCallInstance() can return a destroyed instance),\n       * but should be created.\n       * Important to spread props, because createCallObject/createFrame alters the passed object (adds layout and dailyJsVersion).\n       */\n      switch (type) {\n        case 'callFrame':\n          co = parentElRef?.current\n            ? Daily.createFrame(parentElRef.current, { ...options })\n            : Daily.createFrame({ ...options });\n          break;\n        case 'callObject':\n          co = Daily.createCallObject({ ...options });\n          break;\n      }\n      lastUsedOptions.current = options;\n    }\n\n    setCallInstance(co);\n\n    co.once('call-instance-destroyed', handleDestroyedInstance);\n\n    /**\n     * No cleanup phase here, because callObject.destroy() returns a Promise.\n     * We can't have asynchronous cleanups in a useEffect.\n     * To avoid infinite render loops we compare the props when creating call object instances.\n     */\n  }, [callInstance, options, parentElRef, shouldCreateInstance, type]);\n\n  return callInstance;\n};\n","import { Props, useCallInstance } from './useCallInstance';\n\ntype CallObjectProps = Omit<Props, 'parentEl'>;\n\n/**\n * Helper hook to maintain custom callObject instances in React codebases.\n */\nexport const useCallObject = (props: CallObjectProps) =>\n  useCallInstance('callObject', props);\n","import { DailyEventObject } from '@daily-co/daily-js';\nimport { useCallback, useDebugValue } from 'react';\nimport { useRecoilValue } from 'recoil';\n\nimport { participantState } from '../DailyParticipants';\nimport { useThrottledDailyEvent } from './useThrottledDailyEvent';\n\ninterface UseParticipantArgs {\n  onParticipantLeft?(ev: DailyEventObject<'participant-left'>): void;\n  onParticipantUpdated?(ev: DailyEventObject<'participant-updated'>): void;\n}\n\n/**\n * Returns the participant identified by the given sessionId.\n * @param sessionId – The participant's session_id or \"local\".\n * @deprecated Use [useParticipantProperty](https://docs.daily.co/reference/daily-react/use-participant-property) instead to only subscribe to required participant properties.\n */\nexport const useParticipant = (\n  sessionId: string,\n  { onParticipantLeft, onParticipantUpdated }: UseParticipantArgs = {}\n) => {\n  const participant = useRecoilValue(participantState(sessionId));\n\n  useThrottledDailyEvent(\n    ['participant-updated', 'participant-left'],\n    useCallback(\n      (evts) => {\n        const filteredEvts = evts.filter(\n          (ev) => ev.participant.session_id === sessionId\n        );\n        if (!filteredEvts.length) return;\n        filteredEvts.forEach((ev) => {\n          switch (ev.action) {\n            case 'participant-updated':\n              onParticipantUpdated?.(ev);\n              break;\n            case 'participant-left':\n              onParticipantLeft?.(ev);\n              break;\n          }\n        });\n      },\n      [onParticipantLeft, onParticipantUpdated, sessionId]\n    )\n  );\n\n  useDebugValue(participant);\n\n  return participant;\n};\n","const audioLevelProcessor = `\n    class AudioLevelProcessor extends AudioWorkletProcessor {\n    volume;\n    interval;\n    nextFrame;\n    \n    constructor() {\n      super();\n      this.volume = 0;\n      this.interval = 25;\n      this.nextFrame = this.interval;\n    }\n    \n    get intervalInFrames() {\n      // sampleRate is globally defined in AudioWorklets.\n      // See https://developer.mozilla.org/en-US/docs/Web/API/AudioWorkletGlobalScope\n      // eslint-disable-next-line no-undef\n      return (this.interval / 1000) * sampleRate;\n    }\n    \n    process(inputList) {\n      const firstInput = inputList[0];\n    \n      if (firstInput.length > 0) {\n        const inputData = firstInput[0];\n        let total = 0;\n    \n        for (let i = 0; i < inputData.length; ++i) {\n          total += Math.abs(inputData[i]);\n        }\n    \n        const rms = Math.sqrt(total / inputData.length);\n        this.volume = Math.max(0, Math.min(1, rms));\n    \n        this.nextFrame -= inputData.length;\n        if (this.nextFrame < 0) {\n          this.nextFrame += this.intervalInFrames;\n          this.port.postMessage({ volume: this.volume });\n        }\n      }\n    \n      return true;\n    }\n    }\n    \n    registerProcessor('audiolevel', AudioLevelProcessor);              \n`;\n\nexport const inlineAudioWorklet = `data:application/javascript;charset=utf8,${encodeURIComponent(\n  audioLevelProcessor\n)}`;\n","import { DailyCpuLoadStats, DailyEventObject } from '@daily-co/daily-js';\nimport deepEqual from 'fast-deep-equal';\nimport { useCallback, useDebugValue, useEffect } from 'react';\nimport { atom, useRecoilCallback, useRecoilValue } from 'recoil';\n\nimport { useDaily } from './useDaily';\nimport { useDailyEvent } from './useDailyEvent';\nimport { useMeetingState } from './useMeetingState';\n\ninterface CPULoad {\n  state: DailyCpuLoadStats['cpuLoadState'];\n  reason: DailyCpuLoadStats['cpuLoadStateReason'];\n}\n\nconst CPULoadState = atom<CPULoad>({\n  key: 'cpu-load-state',\n  default: {\n    state: 'low',\n    reason: 'none',\n  },\n});\n\ninterface Props {\n  onCPULoadChange?(ev: DailyEventObject<'cpu-load-change'>): void;\n}\n\n/**\n * Returns the current CPU load as reported by daily-js [cpu-load-change](https://docs.daily.co/reference/daily-js/events/quality-events#cpu-load-change) events\n * and [getCpuLoadStats](https://docs.daily.co/reference/daily-js/instance-methods/get-cpu-load-stats).\n */\nexport const useCPULoad = ({ onCPULoadChange }: Props = {}) => {\n  const cpu = useRecoilValue(CPULoadState);\n  const daily = useDaily();\n  const meetingState = useMeetingState();\n\n  const updateCPULoadState = useRecoilCallback(\n    ({ set, snapshot }) =>\n      async (cpu: CPULoad) => {\n        const prev = await snapshot.getPromise(CPULoadState);\n        if (deepEqual(prev, cpu)) return;\n        set(CPULoadState, cpu);\n      },\n    []\n  );\n\n  useEffect(() => {\n    let mounted = true;\n    if (!daily || daily.isDestroyed() || meetingState !== 'joined-meeting')\n      return;\n    daily.getCpuLoadStats().then((stats) => {\n      if (!mounted) return;\n      updateCPULoadState({\n        state: stats.cpuLoadState,\n        reason: stats.cpuLoadStateReason,\n      });\n    });\n    return () => {\n      mounted = false;\n    };\n  }, [daily, meetingState, updateCPULoadState]);\n\n  useDailyEvent(\n    'cpu-load-change',\n    useCallback(\n      (ev) => {\n        updateCPULoadState({\n          state: ev.cpuLoadState,\n          reason: ev.cpuLoadStateReason,\n        });\n        onCPULoadChange?.(ev);\n      },\n      [onCPULoadChange, updateCPULoadState]\n    )\n  );\n\n  useDebugValue(cpu);\n\n  return cpu;\n};\n","import { useDebugValue } from 'react';\nimport { useRecoilValue } from 'recoil';\n\nimport { meetingErrorState, nonFatalErrorState } from '../DailyMeeting';\n\n/**\n * Returns a meeting's last known errors.\n */\nexport const useDailyError = () => {\n  const meetingError = useRecoilValue(meetingErrorState);\n  const nonFatalError = useRecoilValue(nonFatalErrorState);\n  const result = {\n    meetingError,\n    nonFatalError,\n  };\n  useDebugValue(result);\n  return result;\n};\n","import {\n  DailyCall,\n  DailyEventObject,\n  DailyEventObjectNonFatalError,\n  DailyInputSettings,\n} from '@daily-co/daily-js';\nimport { useCallback, useDebugValue, useEffect } from 'react';\nimport { atom, useRecoilCallback, useRecoilValue } from 'recoil';\n\nimport { RECOIL_PREFIX } from '../lib/constants';\nimport { Reconstruct } from '../types/Reconstruct';\nimport { useDaily } from './useDaily';\nimport { useDailyError } from './useDailyError';\nimport { useDailyEvent } from './useDailyEvent';\n\ntype DailyEventObjectInputSettingsError = Reconstruct<\n  DailyEventObjectNonFatalError,\n  'type',\n  'input-settings-error'\n>;\n\ninterface UseInputSettingsArgs {\n  onError?(ev: DailyEventObjectInputSettingsError): void;\n  onInputSettingsUpdated?(ev: DailyEventObject<'input-settings-updated'>): void;\n}\n\nconst inputSettingsState = atom<DailyInputSettings | null>({\n  key: RECOIL_PREFIX + 'input-settings',\n  default: null,\n});\n\nexport const useInputSettings = ({\n  onError,\n  onInputSettingsUpdated,\n}: UseInputSettingsArgs = {}) => {\n  const inputSettings = useRecoilValue(inputSettingsState);\n  const { nonFatalError } = useDailyError();\n  const daily = useDaily();\n\n  const updateInputSettingsState = useRecoilCallback(\n    ({ set }) =>\n      (inputSettings: DailyInputSettings) => {\n        set(inputSettingsState, inputSettings);\n      },\n    []\n  );\n\n  useEffect(() => {\n    if (!daily) return;\n    daily.getInputSettings().then(updateInputSettingsState);\n  }, [daily, updateInputSettingsState]);\n\n  /**\n   * Handle 'input-settings-updated' events.\n   */\n  useDailyEvent(\n    'input-settings-updated',\n    useCallback(\n      (ev) => {\n        updateInputSettingsState(ev.inputSettings);\n        onInputSettingsUpdated?.(ev);\n      },\n      [onInputSettingsUpdated, updateInputSettingsState]\n    )\n  );\n\n  /**\n   * Handle nonfatal errors of type 'input-settings-error'.\n   */\n  useDailyEvent(\n    'nonfatal-error',\n    useCallback(\n      (ev) => {\n        if (ev.type !== 'input-settings-error') return;\n        onError?.(ev as DailyEventObjectInputSettingsError);\n      },\n      [onError]\n    )\n  );\n\n  /**\n   * Calls daily.updateInputSettings internally.\n   */\n  const updateInputSettings = useCallback(\n    (...args: Parameters<DailyCall['updateInputSettings']>) => {\n      return daily?.updateInputSettings(...args);\n    },\n    [daily]\n  );\n\n  const result = {\n    errorMsg:\n      nonFatalError?.type === 'input-settings-error'\n        ? nonFatalError.errorMsg\n        : null,\n    inputSettings,\n    updateInputSettings,\n  };\n\n  useDebugValue(result);\n\n  return result;\n};\n","import { DailyEventObject, DailyParticipantCounts } from '@daily-co/daily-js';\nimport { useCallback, useDebugValue, useEffect } from 'react';\nimport { atom, useRecoilCallback, useRecoilValue } from 'recoil';\n\nimport { RECOIL_PREFIX } from '../lib/constants';\nimport { useDaily } from './useDaily';\nimport { useDailyEvent } from './useDailyEvent';\n\nconst participantCountsState = atom<DailyParticipantCounts>({\n  key: RECOIL_PREFIX + 'participant-counts',\n  default: {\n    hidden: 0,\n    present: 0,\n  },\n});\n\ninterface Props {\n  onParticipantCountsUpdated?(\n    ev: DailyEventObject<'participant-counts-updated'>\n  ): void;\n}\n\n/**\n * Returns participant counts for hidden and present participants.\n */\nexport const useParticipantCounts = ({\n  onParticipantCountsUpdated,\n}: Props = {}) => {\n  const daily = useDaily();\n  const participantCounts = useRecoilValue(participantCountsState);\n\n  const updateCounts = useRecoilCallback(\n    ({ set }) =>\n      (counts: DailyParticipantCounts) => {\n        set(participantCountsState, counts);\n      },\n    []\n  );\n\n  useDailyEvent(\n    'participant-counts-updated',\n    useCallback(\n      (ev) => {\n        updateCounts(ev.participantCounts);\n        onParticipantCountsUpdated?.(ev);\n      },\n      [onParticipantCountsUpdated, updateCounts]\n    )\n  );\n\n  useEffect(() => {\n    if (!daily || daily.isDestroyed()) return;\n    updateCounts(daily.participantCounts());\n  }, [daily, updateCounts]);\n\n  useDebugValue(participantCounts);\n\n  return participantCounts;\n};\n","import {\n  DailyCall,\n  DailyEventObject,\n  DailyReceiveSettings,\n  DailySingleParticipantReceiveSettings,\n} from '@daily-co/daily-js';\nimport { useCallback, useDebugValue, useEffect } from 'react';\nimport { atomFamily, useRecoilCallback, useRecoilValue } from 'recoil';\n\nimport { RECOIL_PREFIX } from '../lib/constants';\nimport { useDaily } from './useDaily';\nimport { useDailyEvent } from './useDailyEvent';\nimport { useMeetingState } from './useMeetingState';\n\nconst participantReceiveSettingsState = atomFamily<\n  DailySingleParticipantReceiveSettings,\n  string\n>({\n  key: RECOIL_PREFIX + 'participant-receive-settings',\n  default: {},\n});\n\ninterface UseReceiveSettingsArgs {\n  id?: string;\n  onReceiveSettingsUpdated?(\n    ev: DailyEventObject<'receive-settings-updated'>\n  ): void;\n}\n\n/**\n * Allows to read and set receiveSettings.\n * In case receiveSettings for participant specified by id are empty, not set or 'inherit',\n * base receiveSettings will be returned.\n * In case meeting is not in joined state, calls to updateReceiveSettings will be silently ignored.\n */\nexport const useReceiveSettings = ({\n  id = 'base',\n  onReceiveSettingsUpdated,\n}: UseReceiveSettingsArgs = {}) => {\n  const baseSettings = useRecoilValue(participantReceiveSettingsState('base'));\n  const receiveSettings = useRecoilValue(participantReceiveSettingsState(id));\n  const daily = useDaily();\n  const meetingState = useMeetingState();\n\n  const updateReceiveSettingsState = useRecoilCallback(\n    ({ transact_UNSTABLE }) =>\n      (receiveSettings: DailyReceiveSettings) => {\n        transact_UNSTABLE(({ reset, set }) => {\n          const { ...ids } = receiveSettings;\n          for (let [id, settings] of Object.entries(ids)) {\n            set(participantReceiveSettingsState(id), settings);\n          }\n          if (!(id in ids)) {\n            reset(participantReceiveSettingsState(id));\n          }\n        });\n      },\n    [id]\n  );\n  useDailyEvent(\n    'receive-settings-updated',\n    useCallback(\n      (ev) => {\n        updateReceiveSettingsState(ev.receiveSettings);\n        onReceiveSettingsUpdated?.(ev);\n      },\n      [onReceiveSettingsUpdated, updateReceiveSettingsState]\n    )\n  );\n\n  useEffect(() => {\n    if (!daily || daily.isDestroyed()) return;\n    daily.getReceiveSettings().then(updateReceiveSettingsState);\n  }, [daily, updateReceiveSettingsState]);\n\n  const updateReceiveSettings = useCallback(\n    (...args: Parameters<DailyCall['updateReceiveSettings']>) => {\n      if (!daily || meetingState !== 'joined-meeting') return;\n      daily?.updateReceiveSettings?.(...args);\n    },\n    [daily, meetingState]\n  );\n\n  const result = {\n    receiveSettings:\n      id === 'base' || Object.keys(receiveSettings).length === 0\n        ? baseSettings\n        : receiveSettings,\n    updateReceiveSettings,\n  };\n\n  useDebugValue(result);\n\n  return result;\n};\n","import { DailyRoomInfo } from '@daily-co/daily-js';\nimport { useDebugValue } from 'react';\nimport { useRecoilValue } from 'recoil';\n\nimport { roomState } from '../DailyRoom';\n\n/**\n * Stateful hook to work with room, domain and token configuration for a daily room.\n * Includes room default values.\n */\nexport const useRoom = (): DailyRoomInfo | null => {\n  const room = useRecoilValue(roomState);\n  useDebugValue(room);\n  return room;\n};\n","import {\n  DailyCall,\n  DailyEventObject,\n  DailySendSettings,\n} from '@daily-co/daily-js';\nimport { useCallback, useDebugValue, useEffect } from 'react';\nimport { atom, useRecoilCallback, useRecoilValue } from 'recoil';\n\nimport { RECOIL_PREFIX } from '../lib/constants';\nimport { useDaily } from './useDaily';\nimport { useDailyEvent } from './useDailyEvent';\n\nconst sendSettingsState = atom<DailySendSettings | null>({\n  key: RECOIL_PREFIX + 'send-settings',\n  default: null,\n});\n\ninterface Props {\n  onSendSettingsUpdated?(ev: DailyEventObject<'send-settings-updated'>): void;\n}\n\n/**\n * Returns the current media send settings and an updater function to change the settings.\n */\nexport const useSendSettings = ({ onSendSettingsUpdated }: Props = {}) => {\n  const daily = useDaily();\n  const sendSettings = useRecoilValue(sendSettingsState);\n\n  useDailyEvent(\n    'send-settings-updated',\n    useRecoilCallback(\n      ({ set }) =>\n        (ev) => {\n          set(sendSettingsState, ev.sendSettings);\n          onSendSettingsUpdated?.(ev);\n        },\n      [onSendSettingsUpdated]\n    )\n  );\n\n  const storeSendSettings = useRecoilCallback(\n    ({ set }) =>\n      (sendSettings: DailySendSettings | null) => {\n        set(sendSettingsState, sendSettings);\n      },\n    []\n  );\n\n  useEffect(() => {\n    if (!daily || daily.isDestroyed()) return;\n    storeSendSettings(daily.getSendSettings());\n  }, [daily, storeSendSettings]);\n\n  /**\n   * Updates the local clients send settings.\n   * See https://docs.daily.co/reference/daily-js/instance-methods/update-send-settings for details.\n   */\n  const updateSendSettings = useCallback(\n    async (...args: Parameters<DailyCall['updateSendSettings']>) => {\n      const newSendSettings = await daily?.updateSendSettings(...args);\n      if (!newSendSettings) return;\n      storeSendSettings(newSendSettings);\n      return newSendSettings;\n    },\n    [daily, storeSendSettings]\n  );\n\n  const result = {\n    sendSettings,\n    updateSendSettings,\n  };\n\n  useDebugValue(result);\n\n  return result;\n};\n","import {\n  DailyCall,\n  DailyEvent,\n  DailyEventObject,\n  DailyFactoryOptions,\n} from '@daily-co/daily-js';\nimport React, { useCallback, useEffect, useMemo, useRef } from 'react';\nimport { RecoilRoot, RecoilRootProps } from 'recoil';\n\nimport { DailyContext } from './DailyContext';\nimport { DailyDevices } from './DailyDevices';\nimport { DailyEventContext } from './DailyEventContext';\nimport { DailyLiveStreaming } from './DailyLiveStreaming';\nimport { DailyMeeting } from './DailyMeeting';\nimport { DailyNetwork } from './DailyNetwork';\nimport { DailyParticipants } from './DailyParticipants';\nimport { DailyRecordings } from './DailyRecordings';\nimport { DailyRoom } from './DailyRoom';\nimport { DailyTranscriptions } from './DailyTranscriptions';\nimport { useCallObject } from './hooks/useCallObject';\n\ntype BaseProps =\n  | DailyFactoryOptions\n  | {\n      callObject: DailyCall | null;\n    };\n\ntype Props = BaseProps & {\n  /**\n   * Allows to override props for [RecoilRoot](https://recoiljs.org/docs/api-reference/core/RecoilRoot/).\n   * In case you use Recoil in your own application, you can pass `override: false` to allow\n   * daily-react to store its state in your application's RecoilRoot.\n   * Default value: {}\n   */\n  recoilRootProps?: Omit<RecoilRootProps, 'children'>;\n};\n\ntype EventsMap = Partial<Record<DailyEvent, Map<number, Function>>>;\n\nexport const DailyProvider: React.FC<React.PropsWithChildren<Props>> = ({\n  children,\n  recoilRootProps = {},\n  ...props\n}) => {\n  const eventsMap = useRef<EventsMap>({});\n\n  /**\n   * Generic event handler to loop through registered event callbacks.\n   */\n  const handleEvent = useCallback((ev: DailyEventObject) => {\n    if (!('action' in ev)) return;\n    const event = ev.action as DailyEvent;\n    const allHandlers = Array.from(eventsMap.current?.[event] ?? []);\n    const priorityHandlers = allHandlers.filter(([key]) => key < 0);\n    const normalHandlers = allHandlers.filter(([key]) => key > 0);\n    const sortedHandlers = [...priorityHandlers, ...normalHandlers];\n    for (let [, cb] of sortedHandlers) {\n      cb(ev);\n    }\n  }, []);\n\n  /**\n   * In case events are set up via useDailyEvent before a DailyCall instance is available,\n   * we'll register the events whenever daily is set.\n   */\n  const initEventHandlers = useCallback(\n    (daily: DailyCall) => {\n      if (!daily) return;\n      (Object.keys(eventsMap.current) as DailyEvent[]).forEach((event) => {\n        daily.off(event as DailyEvent, handleEvent);\n        if (!daily.isDestroyed()) {\n          daily.on(event as DailyEvent, handleEvent);\n        }\n      });\n    },\n    [handleEvent]\n  );\n\n  const externalCallObject = 'callObject' in props ? props.callObject : null;\n\n  const memoizedOptions = useMemo(\n    () => ('callObject' in props ? {} : props),\n    [props]\n  );\n  const internalCallObject = useCallObject({\n    options: memoizedOptions,\n    shouldCreateInstance: useCallback(() => {\n      return !('callObject' in props);\n    }, [props]),\n  });\n\n  const callObject = externalCallObject ?? internalCallObject;\n\n  useEffect(() => {\n    if (!callObject) return;\n    initEventHandlers(callObject);\n  }, [callObject, initEventHandlers]);\n\n  /**\n   * Registers event callback.\n   */\n  const on = useCallback(\n    (ev: DailyEvent, cb: Function, key: number) => {\n      if (!eventsMap.current[ev]) {\n        eventsMap.current[ev] = new Map();\n        if (callObject) {\n          /**\n           * Make sure only 1 event listener is registered at anytime for handleEvent.\n           * Otherwise, events sent from daily-js might be handled multiple times.\n           */\n          callObject.off(ev, handleEvent);\n          if (!callObject.isDestroyed()) {\n            callObject.on(ev, handleEvent);\n          }\n        }\n      }\n      if (!eventsMap.current[ev]?.has(key)) {\n        eventsMap.current[ev]?.set(key, cb);\n      }\n    },\n    [callObject, handleEvent]\n  );\n\n  /**\n   * Unregisters event callback.\n   */\n  const off = useCallback(\n    (ev: DailyEvent, key: number) => {\n      eventsMap.current[ev]?.delete(key);\n      if (eventsMap.current[ev]?.size === 0) {\n        callObject?.off(ev, handleEvent);\n        delete eventsMap.current[ev];\n      }\n    },\n    [callObject, handleEvent]\n  );\n\n  return (\n    <RecoilRoot {...recoilRootProps}>\n      <DailyContext.Provider value={callObject}>\n        <DailyEventContext.Provider value={{ on, off }}>\n          <DailyRoom>\n            <DailyMeeting>\n              <DailyNetwork>\n                <DailyParticipants>\n                  <DailyRecordings>\n                    <DailyLiveStreaming>\n                      <DailyTranscriptions>\n                        <DailyDevices>{children}</DailyDevices>\n                      </DailyTranscriptions>\n                    </DailyLiveStreaming>\n                  </DailyRecordings>\n                </DailyParticipants>\n              </DailyNetwork>\n            </DailyMeeting>\n          </DailyRoom>\n        </DailyEventContext.Provider>\n      </DailyContext.Provider>\n    </RecoilRoot>\n  );\n};\n","import { DailyEventObject } from '@daily-co/daily-js';\nimport { useCallback, useDebugValue, useEffect, useState } from 'react';\nimport { useRecoilValue } from 'recoil';\n\nimport { activeIdState } from '../DailyParticipants';\nimport { useDaily } from './useDaily';\nimport { useDailyEvent } from './useDailyEvent';\nimport { useParticipant } from './useParticipant';\n\ninterface UseActiveParticipantArgs {\n  /**\n   * If set to true, useActiveParticipant will never return the local participant.\n   */\n  ignoreLocal?: boolean;\n  /**\n   * Optional event callback for [active-speaker-change](https://docs.daily.co/reference/daily-js/events/meeting-events#active-speaker-change) event listener.\n   */\n  onActiveSpeakerChange?(ev: DailyEventObject<'active-speaker-change'>): void;\n}\n\n/**\n * Returns the most recent participant mentioned in an [active-speaker-change](https://docs.daily.co/reference/daily-js/events/meeting-events#active-speaker-change) event.\n * @deprecated Use [useActiveSpeakerId](https://docs.daily.co/reference/daily-react/use-active-speaker-id) instead.\n */\nexport const useActiveParticipant = ({\n  ignoreLocal = false,\n  onActiveSpeakerChange,\n}: UseActiveParticipantArgs = {}) => {\n  const daily = useDaily();\n  const recentActiveId = useRecoilValue(activeIdState);\n  const [activeId, setActiveId] = useState('');\n  const activeParticipant = useParticipant(activeId);\n\n  useEffect(() => {\n    if (!daily) return;\n    const local = daily?.participants()?.local;\n    if (ignoreLocal && recentActiveId === local?.session_id) return;\n\n    // setting activeId as string to avoid passing null to useParticipant hook\n    setActiveId(recentActiveId ?? '');\n  }, [daily, ignoreLocal, recentActiveId]);\n\n  useDailyEvent(\n    'active-speaker-change',\n    useCallback(\n      (ev) => {\n        onActiveSpeakerChange?.(ev);\n      },\n      [onActiveSpeakerChange]\n    )\n  );\n\n  useDebugValue(activeParticipant);\n\n  return activeParticipant;\n};\n","import { DailyEventObjectAppMessage } from '@daily-co/daily-js';\nimport { useCallback } from 'react';\n\nimport { useDaily } from './useDaily';\nimport { useDailyEvent } from './useDailyEvent';\n\ntype SendAppMessage<Data = any> = (data: Data, to?: string) => void;\n\ninterface UseAppMessageArgs<Data> {\n  /**\n   * Optional event callback for [app-message](https://docs.daily.co/reference/daily-js/events/participant-events#app-message) event listener.\n   * Receives this hook's sendAppMessage as an additional argument to avoid circular dependencies.\n   */\n  onAppMessage?(\n    ev: DailyEventObjectAppMessage<Data>,\n    sendAppMessage?: SendAppMessage<Data>\n  ): void;\n}\n\n/**\n * React hook to setup [app-message](https://docs.daily.co/reference/daily-js/events/participant-events#app-message) listeners and\n * to send messages via [sendAppMessage](https://docs.daily.co/reference/daily-js/instance-methods/send-app-message).\n */\nexport const useAppMessage = <Data = any>({\n  onAppMessage,\n}: UseAppMessageArgs<Data> = {}) => {\n  const daily = useDaily();\n\n  const sendAppMessage: SendAppMessage<Data> = useCallback(\n    (data, to = '*') => {\n      if (!daily) return;\n      daily.sendAppMessage(data, to);\n    },\n    [daily]\n  );\n\n  const handleAppMessage = useCallback(\n    (ev: DailyEventObjectAppMessage<Data>) => {\n      onAppMessage?.(ev, sendAppMessage);\n    },\n    [onAppMessage, sendAppMessage]\n  );\n\n  useDailyEvent('app-message', handleAppMessage);\n\n  return sendAppMessage;\n};\n","import { useEffect, useRef } from 'react';\n\nimport { inlineAudioWorklet } from '../lib/inlineAudioWorklet';\n/**\n * Returns the volume level of a given MediaStreamTrack.\n * @param mediaTrack The MediaStreamTrack to be analysed.\n * @param onVolumeChange The function to execute when the volume changes. Can be used to visualise audio output.\n * @deprecated Use useAudioLevelObserver() instead.\n */\nexport const useAudioLevel = (\n  mediaTrack: MediaStreamTrack | undefined,\n  onVolumeChange: (volume: number) => void\n) => {\n  const audioCtx = useRef<AudioContext>();\n\n  useEffect(\n    function setupStreamAndStartProcessing() {\n      // No mediaTrack. Stop immediately.\n      if (!mediaTrack) return;\n      const AudioCtx =\n        typeof AudioContext !== 'undefined'\n          ? AudioContext\n          : typeof window.webkitAudioContext !== 'undefined'\n          ? window.webkitAudioContext\n          : null;\n      // No AudioContext available in browser. Can't measure audio volume.\n      if (!AudioCtx) return;\n      if (!audioCtx.current) {\n        // No audio context initialized. Initializing now.\n        audioCtx.current = new AudioCtx();\n      }\n      const audioContext = audioCtx.current;\n      // Audio context could not be initialized. Stopping.\n      if (!audioContext) return;\n\n      const mediaStreamSource = audioContext.createMediaStreamSource(\n        new MediaStream([mediaTrack])\n      );\n      let node: AudioWorkletNode | null;\n      let gainNode: GainNode;\n\n      const startProcessing = async () => {\n        /**\n         * Try to add the module only once.\n         * In case it's not added to the audio context, yet, trying to initialize it will fail.\n         * There's only one real reason for `new AudioWorkletNode` to fail and that is\n         * when the corresponding module isn't added to the audio context, yet.\n         * This makes sure we only add the module once.\n         *\n         * We're inlining the worklet instead of loading it via a URL as not to complicate bundling\n         * this package.\n         */\n        try {\n          node = new AudioWorkletNode(audioContext, 'audiolevel');\n          gainNode = audioContext.createGain();\n        } catch {\n          try {\n            await audioContext.audioWorklet.addModule(inlineAudioWorklet);\n            node = new AudioWorkletNode(audioContext, 'audiolevel');\n            gainNode = audioContext.createGain();\n          } catch (e) {\n            console.error(e);\n          }\n        }\n\n        if (!(node && gainNode)) return;\n\n        node.port.onmessage = (event) => {\n          let volume = 0;\n          if (event.data.volume) volume = event.data.volume;\n          if (!node) return;\n          onVolumeChange(volume);\n        };\n\n        gainNode.gain.value = 0;\n\n        try {\n          mediaStreamSource\n            .connect(node)\n            .connect(gainNode)\n            .connect(audioContext.destination);\n        } catch (e) {\n          console.warn(e);\n        }\n      };\n\n      startProcessing();\n\n      return () => {\n        node?.disconnect();\n        node = null;\n        mediaStreamSource?.disconnect();\n      };\n    },\n    [onVolumeChange, mediaTrack]\n  );\n};\n","import { useCallback, useEffect } from 'react';\n\nimport { useDaily } from './useDaily';\nimport { useDailyEvent } from './useDailyEvent';\nimport { useLocalSessionId } from './useLocalSessionId';\n\ntype AudioLevelCallback = (volume: number) => void;\n\n/**\n * Observes the volume level for a given participant.\n * @param id The session_id of the participant to observe.\n * @param cb The function to execute when the volume changes. Can be used to visualise audio output.\n */\nexport const useAudioLevelObserver = (id: string, cb: AudioLevelCallback) => {\n  const daily = useDaily();\n  const localSessionId = useLocalSessionId();\n  const isLocal = id === localSessionId;\n\n  useDailyEvent(\n    'local-audio-level',\n    useCallback(\n      (ev) => {\n        if (!isLocal) return;\n        cb(ev.audioLevel);\n      },\n      [cb, isLocal]\n    )\n  );\n\n  useDailyEvent(\n    'remote-participants-audio-level',\n    useCallback(\n      (ev) => {\n        if (isLocal) return;\n        cb(ev.participantsAudioLevel[id]);\n      },\n      [cb, id, isLocal]\n    )\n  );\n\n  useEffect(\n    function maybeStartLocalAudioObserver() {\n      if (!daily || daily.isDestroyed() || !isLocal) return;\n      if (daily.isLocalAudioLevelObserverRunning()) return;\n      daily.startLocalAudioLevelObserver();\n    },\n    [daily, isLocal]\n  );\n\n  useEffect(\n    function maybeStartRemoteAudioObserver() {\n      if (!daily || daily.isDestroyed() || isLocal) return;\n      if (daily.isRemoteParticipantsAudioLevelObserverRunning()) return;\n      daily.startRemoteParticipantsAudioLevelObserver();\n    },\n    [daily, isLocal]\n  );\n};\n","import { MediaTrackState, useMediaTrack } from './useMediaTrack';\n\n/**\n * Returns a participant's audio track and state.\n * @param participantId The participant's session_id.\n */\nexport const useAudioTrack = (participantId: string): MediaTrackState =>\n  useMediaTrack(participantId, 'audio');\n","import { useCallInstance } from './useCallInstance';\n\ntype Props = Parameters<typeof useCallInstance>[1];\n\n/**\n * Helper hook to maintain custom callFrame instances in React codebases.\n */\nexport const useCallFrame = (props: Props) =>\n  useCallInstance('callFrame', props);\n","import { useCallback, useContext, useDebugValue } from 'react';\nimport { useRecoilValue } from 'recoil';\n\nimport {\n  cameraDevicesState,\n  generalCameraState,\n  generalMicrophoneState,\n  lastCameraErrorState,\n  microphoneDevicesState,\n  speakerDevicesState,\n} from '../DailyDevices';\nimport { DailyDevicesContext } from '../DailyDevicesContext';\nimport { useDaily } from './useDaily';\n\n/**\n * This hook allows access to information about the user's devices and their state.\n */\nexport const useDevices = () => {\n  const daily = useDaily();\n\n  const camState = useRecoilValue(generalCameraState);\n  const micState = useRecoilValue(generalMicrophoneState);\n  const camDevices = useRecoilValue(cameraDevicesState);\n  const micDevices = useRecoilValue(microphoneDevicesState);\n  const speakerDevices = useRecoilValue(speakerDevicesState);\n  const cameraError = useRecoilValue(lastCameraErrorState);\n\n  const { refreshDevices } = useContext(DailyDevicesContext);\n\n  /**\n   * Sets video input device to given deviceId.\n   */\n  const setCamera = useCallback(\n    async (deviceId: string) => {\n      await daily?.setInputDevicesAsync({\n        audioDeviceId: null,\n        videoDeviceId: deviceId,\n      });\n    },\n    [daily]\n  );\n\n  /**\n   * Sets audio input device to given deviceId.\n   */\n  const setMicrophone = useCallback(\n    async (deviceId: string) => {\n      await daily?.setInputDevicesAsync({\n        audioDeviceId: deviceId,\n        videoDeviceId: null,\n      });\n    },\n    [daily]\n  );\n\n  /**\n   * Sets audio output device to given deviceId.\n   */\n  const setSpeaker = useCallback(\n    async (deviceId: string) => {\n      await daily?.setOutputDeviceAsync({\n        outputDeviceId: deviceId,\n      });\n    },\n    [daily]\n  );\n\n  const errorStates: typeof camState[] = [\n    'blocked',\n    'in-use',\n    'not-found',\n    'constraints-invalid',\n    'constraints-none-specified',\n    'undefined-mediadevices',\n    'unknown',\n  ];\n\n  const result = {\n    /**\n     * Most recent error object emitted via [camera-error event](https://docs.daily.co/reference/daily-js/events/meeting-events#camera-error).\n     */\n    cameraError,\n    /**\n     * A list of the user's camera (videoinput) devices. See [MediaDeviceInfo](https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo) for more info.\n     */\n    cameras: camDevices,\n    /**\n     * The general state for camera access.\n     */\n    camState,\n    /**\n     * Holds the currently selected camera.\n     */\n    currentCam: camDevices.find((cam) => cam.selected),\n    /**\n     * Holds the currently selected microphone.\n     */\n    currentMic: micDevices.find((mic) => mic.selected),\n    /**\n     * Holds the currently selected speaker.\n     */\n    currentSpeaker: speakerDevices.find((speaker) => speaker.selected),\n    /**\n     * Indicates that there's an issue with camera devices.\n     */\n    hasCamError: errorStates.includes(camState),\n    /**\n     * Indicates that there's an issue with microphone devices.\n     */\n    hasMicError: errorStates.includes(micState),\n    /**\n     * A list of the user's microphone (audioinput) devices. See [MediaDeviceInfo](https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo) for more info.\n     */\n    microphones: micDevices,\n    /**\n     * The general state for microphone access.\n     */\n    micState,\n    /**\n     * Refreshes the list of devices using [enumerateDevices](https://docs.daily.co/reference/daily-js/instance-methods/enumerate-devices).\n     */\n    refreshDevices,\n    /**\n     * Allows to switch to the camera with the specified deviceId. Calls [setInputDevicesAsync](https://docs.daily.co/reference/daily-js/instance-methods/set-input-devices-async) internally.\n     */\n    setCamera,\n    /**\n     * Allows to switch to the microphone with the specified deviceId. Calls [setInputDevicesAsync](https://docs.daily.co/reference/daily-js/instance-methods/set-input-devices-async) internally.\n     */\n    setMicrophone,\n    /**\n     * Allows to switch to the speaker with the specified deviceId. Calls [setOutputDevice](https://docs.daily.co/reference/daily-js/instance-methods/set-output-device) internally.\n     */\n    setSpeaker,\n    /**\n     * A list of the user's speaker (audiooutput) devices. See [MediaDeviceInfo](https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo) for more info.\n     */\n    speakers: speakerDevices,\n  };\n\n  useDebugValue(result);\n\n  return result;\n};\n","import {\n  DailyCall,\n  DailyEventObject,\n  DailyEventObjectNonFatalError,\n} from '@daily-co/daily-js';\nimport { useCallback, useDebugValue } from 'react';\nimport { useRecoilValue } from 'recoil';\n\nimport { liveStreamingState } from '../DailyLiveStreaming';\nimport { Reconstruct } from '../types/Reconstruct';\nimport { useDaily } from './useDaily';\nimport { useDailyEvent } from './useDailyEvent';\n\ntype DailyEventObjectLiveStreamingWarning = Reconstruct<\n  DailyEventObjectNonFatalError,\n  'type',\n  'live-streaming-warning'\n>;\n\ninterface UseLiveStreamingArgs {\n  onLiveStreamingStarted?(ev: DailyEventObject<'live-streaming-started'>): void;\n  onLiveStreamingStopped?(ev: DailyEventObject<'live-streaming-stopped'>): void;\n  onLiveStreamingUpdated?(ev: DailyEventObject<'live-streaming-updated'>): void;\n  onLiveStreamingError?(ev: DailyEventObject<'live-streaming-error'>): void;\n  onLiveStreamingWarning?(ev: DailyEventObjectLiveStreamingWarning): void;\n}\n\n/**\n * This hook allows to setup [live streaming events](https://docs.daily.co/reference/daily-js/events/live-streaming-events),\n * as well as starting, stopping and updating live streams.\n *\n * Returns the current live streaming state, incl. the current layout and potential errorMsg.\n */\nexport const useLiveStreaming = ({\n  onLiveStreamingError,\n  onLiveStreamingStarted,\n  onLiveStreamingStopped,\n  onLiveStreamingUpdated,\n  onLiveStreamingWarning,\n}: UseLiveStreamingArgs = {}) => {\n  const daily = useDaily();\n  const state = useRecoilValue(liveStreamingState);\n\n  useDailyEvent(\n    'live-streaming-started',\n    useCallback(\n      (ev) => {\n        onLiveStreamingStarted?.(ev);\n      },\n      [onLiveStreamingStarted]\n    )\n  );\n  useDailyEvent(\n    'live-streaming-stopped',\n    useCallback(\n      (ev) => {\n        onLiveStreamingStopped?.(ev);\n      },\n      [onLiveStreamingStopped]\n    )\n  );\n  useDailyEvent(\n    'live-streaming-updated',\n    useCallback(\n      (ev) => {\n        onLiveStreamingUpdated?.(ev);\n      },\n      [onLiveStreamingUpdated]\n    )\n  );\n  useDailyEvent(\n    'live-streaming-error',\n    useCallback(\n      (ev) => {\n        onLiveStreamingError?.(ev);\n      },\n      [onLiveStreamingError]\n    )\n  );\n  useDailyEvent(\n    'nonfatal-error',\n    useCallback(\n      (ev) => {\n        if (ev.type !== 'live-streaming-warning') return;\n        onLiveStreamingWarning?.(ev as DailyEventObjectLiveStreamingWarning);\n      },\n      [onLiveStreamingWarning]\n    )\n  );\n\n  const startLiveStreaming = useCallback(\n    (...args: Parameters<DailyCall['startLiveStreaming']>) => {\n      if (!daily) return;\n      daily.startLiveStreaming(...args);\n    },\n    [daily]\n  );\n\n  const stopLiveStreaming = useCallback(\n    (...args: Parameters<DailyCall['stopLiveStreaming']>) => {\n      if (!daily) return;\n      daily.stopLiveStreaming(...args);\n    },\n    [daily]\n  );\n\n  const updateLiveStreaming = useCallback(\n    (...args: Parameters<DailyCall['updateLiveStreaming']>) => {\n      if (!daily) return;\n      daily.updateLiveStreaming(...args);\n    },\n    [daily]\n  );\n\n  const result = {\n    ...state,\n    startLiveStreaming,\n    stopLiveStreaming,\n    updateLiveStreaming,\n  };\n\n  useDebugValue(result);\n\n  return result;\n};\n","import { useDebugValue } from 'react';\nimport { useRecoilValue } from 'recoil';\n\nimport { localIdState } from '../DailyParticipants';\nimport { useParticipant } from './useParticipant';\n\n/**\n * Returns the [participants() object](https://docs.daily.co/reference/daily-js/instance-methods/participants) for the local user.\n * @deprecated Use [useLocalSessionId](https://docs.daily.co/reference/daily-react/use-local-session-id) instead.\n */\nexport const useLocalParticipant = (): ReturnType<typeof useParticipant> => {\n  const localId = useRecoilValue(localIdState);\n  const localParticipant = useParticipant(localId);\n  useDebugValue(localParticipant);\n  return localParticipant;\n};\n","import { DailyEventObjectNonFatalError } from '@daily-co/daily-js';\nimport { useCallback, useDebugValue } from 'react';\nimport { useRecoilValue } from 'recoil';\n\nimport { meetingSessionDataState } from '../DailyMeeting';\nimport { Reconstruct } from '../types/Reconstruct';\nimport { useDailyEvent } from './useDailyEvent';\n\ntype DailyEventObjectMeetingSessionDataError = Reconstruct<\n  DailyEventObjectNonFatalError,\n  'type',\n  'meeting-session-data-error'\n>;\n\ninterface Props {\n  onError?(ev: DailyEventObjectMeetingSessionDataError): void;\n}\n\n/**\n * Returns a meeting's current session data and topology.\n */\nexport const useMeetingSessionState = <T = any>({ onError }: Props = {}) => {\n  const meetingSessionState = useRecoilValue(meetingSessionDataState);\n\n  useDailyEvent(\n    'nonfatal-error',\n    useCallback(\n      (ev) => {\n        if (ev.type !== 'meeting-session-data-error') return;\n        onError?.(ev as DailyEventObjectMeetingSessionDataError);\n      },\n      [onError]\n    )\n  );\n\n  const result = {\n    data: meetingSessionState?.data as T,\n    topology: meetingSessionState?.topology,\n  };\n\n  useDebugValue(result);\n\n  return result;\n};\n","import { DailyEventObject } from '@daily-co/daily-js';\nimport { useCallback, useDebugValue } from 'react';\nimport { useRecoilValue } from 'recoil';\n\nimport {\n  networkQualityState,\n  networkThresholdState,\n  topologyState,\n} from '../DailyNetwork';\nimport { useDaily } from './useDaily';\nimport { useDailyEvent } from './useDailyEvent';\n\ninterface UseNetworkArgs {\n  onNetworkConnection?(ev: DailyEventObject<'network-connection'>): void;\n  onNetworkQualityChange?(ev: DailyEventObject<'network-quality-change'>): void;\n}\n\n/**\n * Returns current information about network quality and topology.\n * Allows to setup event listeners for daily's [network events](https://docs.daily.co/reference/daily-js/events/network-events).\n */\nexport const useNetwork = ({\n  onNetworkConnection,\n  onNetworkQualityChange,\n}: UseNetworkArgs = {}) => {\n  const daily = useDaily();\n\n  const topology = useRecoilValue(topologyState);\n  const quality = useRecoilValue(networkQualityState);\n  const threshold = useRecoilValue(networkThresholdState);\n\n  useDailyEvent(\n    'network-connection',\n    useCallback(\n      (ev) => {\n        onNetworkConnection?.(ev);\n      },\n      [onNetworkConnection]\n    )\n  );\n  useDailyEvent(\n    'network-quality-change',\n    useCallback(\n      (ev) => {\n        onNetworkQualityChange?.(ev);\n      },\n      [onNetworkQualityChange]\n    )\n  );\n\n  const getStats = useCallback(async () => {\n    const newStats = await daily?.getNetworkStats();\n    return newStats?.stats;\n  }, [daily]);\n\n  const result = {\n    getStats,\n    quality,\n    threshold,\n    topology,\n  };\n\n  useDebugValue(result);\n\n  return result;\n};\n","import { useDebugValue } from 'react';\n\nimport { useLocalSessionId } from './useLocalSessionId';\nimport { useParticipantProperty } from './useParticipantProperty';\n\n/**\n * Returns parsed permissions for a given participant.\n * In case no `sessionId` is passed, the hook returns permissions for the local participant.\n * @param sessionId The participant's session_id (optional)\n */\nexport const usePermissions = (sessionId?: string) => {\n  const localSessionId = useLocalSessionId();\n  const permissions = useParticipantProperty(\n    sessionId ?? localSessionId,\n    'permissions'\n  );\n\n  const canSendAudio =\n    typeof permissions?.canSend === 'boolean'\n      ? permissions?.canSend\n      : Boolean(permissions?.canSend?.has('audio'));\n  const canSendVideo =\n    typeof permissions?.canSend === 'boolean'\n      ? permissions?.canSend\n      : Boolean(permissions?.canSend?.has('video'));\n  const canSendCustomAudio =\n    typeof permissions?.canSend === 'boolean'\n      ? permissions?.canSend\n      : Boolean(permissions?.canSend?.has('customAudio'));\n  const canSendCustomVideo =\n    typeof permissions?.canSend === 'boolean'\n      ? permissions?.canSend\n      : Boolean(permissions?.canSend?.has('customVideo'));\n  const canSendScreenAudio =\n    typeof permissions?.canSend === 'boolean'\n      ? permissions?.canSend\n      : Boolean(permissions?.canSend?.has('screenAudio'));\n  const canSendScreenVideo =\n    typeof permissions?.canSend === 'boolean'\n      ? permissions?.canSend\n      : Boolean(permissions?.canSend?.has('screenVideo'));\n  const canAdminParticipants =\n    typeof permissions?.canAdmin === 'boolean'\n      ? permissions?.canAdmin\n      : Boolean(permissions?.canAdmin?.has('participants'));\n  const canAdminStreaming =\n    typeof permissions?.canAdmin === 'boolean'\n      ? permissions?.canAdmin\n      : Boolean(permissions?.canAdmin?.has('streaming'));\n  const canAdminTranscription =\n    typeof permissions?.canAdmin === 'boolean'\n      ? permissions?.canAdmin\n      : Boolean(permissions?.canAdmin?.has('transcription'));\n\n  const result = {\n    canAdminParticipants,\n    canAdminStreaming,\n    canAdminTranscription,\n    canSendAudio,\n    canSendCustomAudio,\n    canSendCustomVideo,\n    canSendScreenAudio,\n    canSendScreenVideo,\n    canSendVideo,\n    hasPresence: permissions?.hasPresence,\n    permissions,\n  };\n\n  useDebugValue(result);\n\n  return result;\n};\n","import { DailyCall, DailyEventObject } from '@daily-co/daily-js';\nimport { useCallback, useDebugValue } from 'react';\nimport { useRecoilValue } from 'recoil';\n\nimport { recordingState } from '../DailyRecordings';\nimport { useDaily } from './useDaily';\nimport { useDailyEvent } from './useDailyEvent';\n\ninterface UseRecordingArgs {\n  onRecordingData?(ev: DailyEventObject<'recording-data'>): void;\n  onRecordingError?(ev: DailyEventObject<'recording-error'>): void;\n  onRecordingStarted?(ev: DailyEventObject<'recording-started'>): void;\n  onRecordingStopped?(ev: DailyEventObject<'recording-stopped'>): void;\n}\n\nexport const useRecording = ({\n  onRecordingData,\n  onRecordingError,\n  onRecordingStarted,\n  onRecordingStopped,\n}: UseRecordingArgs = {}) => {\n  const daily = useDaily();\n  const state = useRecoilValue(recordingState);\n\n  useDailyEvent(\n    'recording-started',\n    useCallback(\n      (ev) => {\n        onRecordingStarted?.(ev);\n      },\n      [onRecordingStarted]\n    )\n  );\n  useDailyEvent(\n    'recording-stopped',\n    useCallback(\n      (ev) => {\n        onRecordingStopped?.(ev);\n      },\n      [onRecordingStopped]\n    )\n  );\n  useDailyEvent(\n    'recording-error',\n    useCallback(\n      (ev) => {\n        onRecordingError?.(ev);\n      },\n      [onRecordingError]\n    )\n  );\n  useDailyEvent(\n    'recording-data',\n    useCallback(\n      (ev) => {\n        onRecordingData?.(ev);\n      },\n      [onRecordingData]\n    )\n  );\n\n  /**\n   * Starts the recording with the given optional options.\n   */\n  const startRecording = useCallback(\n    (...args: Parameters<DailyCall['startRecording']>) => {\n      if (!daily) return;\n      daily.startRecording(...args);\n    },\n    [daily]\n  );\n\n  /**\n   * Stops a recording.\n   */\n  const stopRecording = useCallback(\n    (...args: Parameters<DailyCall['stopRecording']>) => {\n      if (!daily) return;\n      daily.stopRecording(...args);\n    },\n    [daily]\n  );\n\n  /**\n   * Updates a running recording's layout configuration.\n   */\n  const updateRecording = useCallback(\n    (...args: Parameters<DailyCall['updateRecording']>) => {\n      if (!daily) return;\n      daily.updateRecording(...args);\n    },\n    [daily]\n  );\n\n  const result = {\n    ...state,\n    startRecording,\n    stopRecording,\n    updateRecording,\n  };\n\n  useDebugValue(result);\n\n  return result;\n};\n","import { useDebugValue, useEffect, useState } from 'react';\nimport { useRecoilValue } from 'recoil';\n\nimport { localJoinDateState } from '../DailyParticipants';\nimport { useRoom } from './useRoom';\n\ninterface Countdown {\n  hours: number;\n  minutes: number;\n  seconds: number;\n}\n\ninterface Props {\n  onCountdown?(countdown: Countdown): void;\n}\n\nexport const useRoomExp = ({ onCountdown }: Props = {}) => {\n  const localJoinDate = useRecoilValue(localJoinDateState);\n  const room = useRoom();\n\n  const [ejectDate, setEjectDate] = useState<Date | null>(null);\n\n  useEffect(() => {\n    const ejectAfterElapsed =\n      room?.tokenConfig?.eject_after_elapsed ??\n      room?.config?.eject_after_elapsed ??\n      0;\n    const expUTCTimeStamp = room?.tokenConfig?.exp ?? room?.config?.exp ?? 0;\n    const ejectAtExp =\n      room?.tokenConfig?.eject_at_token_exp ??\n      room?.config?.eject_at_room_exp ??\n      false;\n\n    let newEjectDate: Date = new Date(0);\n\n    if (ejectAfterElapsed && localJoinDate) {\n      newEjectDate = new Date(\n        localJoinDate.getTime() + 1000 * ejectAfterElapsed\n      );\n    }\n\n    if (ejectAtExp && expUTCTimeStamp) {\n      const expDate = new Date(expUTCTimeStamp * 1000);\n      if (\n        !newEjectDate.getTime() ||\n        (newEjectDate.getTime() > 0 && expDate < newEjectDate)\n      )\n        newEjectDate = expDate;\n    }\n\n    if (newEjectDate.getTime() === 0) return;\n\n    setEjectDate((oldEjectDate) =>\n      oldEjectDate?.getTime() !== newEjectDate.getTime()\n        ? newEjectDate\n        : oldEjectDate\n    );\n  }, [\n    localJoinDate,\n    room?.config?.eject_after_elapsed,\n    room?.config?.eject_at_room_exp,\n    room?.config?.exp,\n    room?.tokenConfig?.eject_after_elapsed,\n    room?.tokenConfig?.eject_at_token_exp,\n    room?.tokenConfig?.exp,\n  ]);\n\n  useEffect(() => {\n    if (!ejectDate || ejectDate.getTime() === 0) return;\n\n    const interval = setInterval(() => {\n      const eject = (ejectDate?.getTime() ?? 0) / 1000;\n      const now = Date.now() / 1000;\n      const diff = eject - now;\n      if (diff < 0) return;\n      const hours = Math.max(0, Math.floor(diff / 3600));\n      const minutes = Math.max(0, Math.floor((diff % 3600) / 60));\n      const seconds = Math.max(0, Math.floor(diff % 60));\n      onCountdown?.({\n        hours,\n        minutes,\n        seconds,\n      });\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [ejectDate, onCountdown]);\n\n  const result = {\n    ejectDate,\n  };\n\n  useDebugValue(result);\n\n  return result;\n};\n","import { MediaTrackState, useMediaTrack } from './useMediaTrack';\n\n/**\n * Returns a participant's screenAudio track and state.\n * @param participantId The participant's session_id.\n */\nexport const useScreenAudioTrack = (participantId: string): MediaTrackState =>\n  useMediaTrack(participantId, 'screenAudio');\n","import { MediaTrackState, useMediaTrack } from './useMediaTrack';\n\n/**\n * Returns a participant's screenVideo track and state.\n * @param participantId The participant's session_id.\n */\nexport const useScreenVideoTrack = (participantId: string): MediaTrackState =>\n  useMediaTrack(participantId, 'screenVideo');\n","import {\n  DailyCall,\n  DailyEventObject,\n  DailyEventObjectAppMessage,\n} from '@daily-co/daily-js';\nimport { useCallback, useDebugValue } from 'react';\nimport { useRecoilValue } from 'recoil';\n\nimport { Transcription, transcriptionState } from '../DailyTranscriptions';\nimport { useDaily } from './useDaily';\nimport { useDailyEvent } from './useDailyEvent';\n\ninterface UseTranscriptionArgs {\n  onTranscriptionStarted?(ev: DailyEventObject<'transcription-started'>): void;\n  onTranscriptionStopped?(ev: DailyEventObject<'transcription-stopped'>): void;\n  onTranscriptionError?(ev: DailyEventObject<'transcription-error'>): void;\n  /**\n   * @deprecated Please use onTranscriptionMessage instead.\n   */\n  onTranscriptionAppData?(ev: DailyEventObjectAppMessage<Transcription>): void;\n  onTranscriptionMessage?(ev: DailyEventObject<'transcription-message'>): void;\n}\n\nexport const useTranscription = ({\n  onTranscriptionAppData,\n  onTranscriptionError,\n  onTranscriptionMessage,\n  onTranscriptionStarted,\n  onTranscriptionStopped,\n}: UseTranscriptionArgs = {}) => {\n  const daily = useDaily();\n\n  const state = useRecoilValue(transcriptionState);\n\n  useDailyEvent(\n    'transcription-started',\n    useCallback(\n      (ev) => {\n        onTranscriptionStarted?.(ev);\n      },\n      [onTranscriptionStarted]\n    )\n  );\n  useDailyEvent(\n    'transcription-stopped',\n    useCallback(\n      (ev) => {\n        onTranscriptionStopped?.(ev);\n      },\n      [onTranscriptionStopped]\n    )\n  );\n  useDailyEvent(\n    'transcription-error',\n    useCallback(\n      (ev) => {\n        onTranscriptionError?.(ev);\n      },\n      [onTranscriptionError]\n    )\n  );\n  useDailyEvent(\n    'transcription-message',\n    useCallback(\n      (ev) => {\n        onTranscriptionMessage?.(ev);\n      },\n      [onTranscriptionMessage]\n    )\n  );\n  useDailyEvent(\n    'app-message',\n    useCallback(\n      (ev: DailyEventObjectAppMessage<Transcription>) => {\n        if (ev?.fromId === 'transcription') {\n          onTranscriptionAppData?.(ev);\n        }\n      },\n      [onTranscriptionAppData]\n    )\n  );\n\n  /**\n   * Starts the transcription with the given optional options.\n   */\n  const startTranscription = useCallback(\n    (...args: Parameters<DailyCall['startTranscription']>) => {\n      if (!daily) return;\n      daily.startTranscription(...args);\n    },\n    [daily]\n  );\n\n  /**\n   * Stops a transcription.\n   */\n  const stopTranscription = useCallback(\n    (...args: Parameters<DailyCall['stopTranscription']>) => {\n      if (!daily) return;\n      daily.stopTranscription(...args);\n    },\n    [daily]\n  );\n\n  const result = {\n    ...state,\n    startTranscription,\n    stopTranscription,\n  };\n\n  useDebugValue(result);\n\n  return result;\n};\n","import { MediaTrackState, useMediaTrack } from './useMediaTrack';\n\n/**\n * Returns a participant's video track and state.\n * @param participantId The participant's session_id.\n */\nexport const useVideoTrack = (participantId: string): MediaTrackState =>\n  useMediaTrack(participantId, 'video');\n","import { DailyEventObject } from '@daily-co/daily-js';\nimport { useCallback, useDebugValue } from 'react';\nimport { useRecoilValue } from 'recoil';\n\nimport { allWaitingParticipantsSelector } from '../DailyParticipants';\nimport { useDaily } from './useDaily';\nimport { useDailyEvent } from './useDailyEvent';\n\ninterface UseWaitingParticipantsArgs {\n  onWaitingParticipantAdded?(\n    ev: DailyEventObject<'waiting-participant-added'>\n  ): void;\n  onWaitingParticipantUpdated?(\n    ev: DailyEventObject<'waiting-participant-updated'>\n  ): void;\n  onWaitingParticipantRemoved?(\n    ev: DailyEventObject<'waiting-participant-removed'>\n  ): void;\n}\n\n/**\n * Hook to access and manage waiting participants.\n */\nexport const useWaitingParticipants = ({\n  onWaitingParticipantAdded,\n  onWaitingParticipantRemoved,\n  onWaitingParticipantUpdated,\n}: UseWaitingParticipantsArgs = {}) => {\n  const daily = useDaily();\n\n  const waitingParticipants = useRecoilValue(allWaitingParticipantsSelector);\n\n  useDailyEvent(\n    'waiting-participant-added',\n    useCallback(\n      (ev) => {\n        onWaitingParticipantAdded?.(ev);\n      },\n      [onWaitingParticipantAdded]\n    )\n  );\n  useDailyEvent(\n    'waiting-participant-removed',\n    useCallback(\n      (ev) => {\n        onWaitingParticipantRemoved?.(ev);\n      },\n      [onWaitingParticipantRemoved]\n    )\n  );\n  useDailyEvent(\n    'waiting-participant-updated',\n    useCallback(\n      (ev) => {\n        onWaitingParticipantUpdated?.(ev);\n      },\n      [onWaitingParticipantUpdated]\n    )\n  );\n\n  const updateWaitingParticipantAccess = useCallback(\n    (id: '*' | string, grantRequestedAccess: boolean) => {\n      if (id === '*') {\n        daily?.updateWaitingParticipants({\n          '*': {\n            grantRequestedAccess,\n          },\n        });\n        return;\n      }\n      daily?.updateWaitingParticipant(id, {\n        grantRequestedAccess,\n      });\n    },\n    [daily]\n  );\n\n  const grantAccess = useCallback(\n    (id: '*' | string) => {\n      updateWaitingParticipantAccess(id, true);\n    },\n    [updateWaitingParticipantAccess]\n  );\n\n  const denyAccess = useCallback(\n    (id: '*' | string) => {\n      updateWaitingParticipantAccess(id, false);\n    },\n    [updateWaitingParticipantAccess]\n  );\n\n  const result = {\n    waitingParticipants,\n    grantAccess,\n    denyAccess,\n  };\n\n  useDebugValue(result);\n\n  return result;\n};\n"],"names":["DailyContext","createContext","useDaily","daily","useContext","useDebugValue","DailyEventContext","on","off","priorityCounter","getPriorityUnique","uniqueCounter","getUnique","useDailyEvent","ev","callback","INTERNAL_priority","_useContext","_useState","useState","isBlocked","setIsBlocked","reassignCount","useRef","eventId","useMemo","useEffect","current","console","error","timeout","setTimeout","clearTimeout","event","participantPropertyPathsState","atomFamily","key","RECOIL_PREFIX","default","participantPropertyState","dangerouslyAllowMutability","participantPropertiesState","selectorFamily","get","_ref","id","properties","_ref2","map","path","property","useParticipantProperty","participantId","propertyPaths","useRecoilValue","Array","isArray","reduce","o","i","_ref3","useThrottledDailyEvent","throttleTimeout","r","e","throttledEvents","useCallback","length","emitEvents","throttle","trailing","addEvent","push","forEach","customDeepEqual","a","b","MediaStream","active","getTracks","every","track","idx","MediaStreamTrack","kind","readyState","Date","getTime","RegExp","source","flags","Set","size","_step","_iterator","_createForOfIteratorHelperLoose","values","done","has","value","Map","_step2","_iterator2","entries","_step2$value","keysA","Object","keys","keysB","_i","_keysA","equalSelector","options","prior","inner","selector","latest","equals","equalSelectorFamily","priorValues","_extends","param","set","getParticipantPaths","p","getPaths","currentPath","visited","add","paths","prototype","hasOwnProperty","call","newPath","apply","concat","resolveParticipantPaths","participant","String","split","filter","resolvePath","activeIdState","atom","localIdState","localJoinDateState","participantIdsState","participantState","waitingParticipantsState","waitingParticipantState","awaitingAccess","level","name","allWaitingParticipantsSelector","DailyParticipants","children","initialized","setInitialized","initParticipants","useRecoilCallback","_ref4","transact_UNSTABLE","participants","_ref5","local","session_id","participantsArray","ids","interval","setInterval","clearInterval","handleInitEvent","_ref6","handleCleanup","_ref7","reset","snapshot","_asyncToGenerator","getPromise","_ref9","evts","_ref10","action","activeSpeaker","peerId","prev","last_active","prevIds","includes","prevId","oldPaths","_ref11","_ref12","wps","wp","React","useLocalSessionId","localId","noopFilter","useActiveSpeakerId","_temp","_ref$filter","_ref$ignoreLocal","ignoreLocal","localSessionId","recentActiveId","isIgnoredLocalId","isFilteredOut","activeId","setActiveId","isTrackOff","trackState","participantIdsFilteredAndSortedState","sort","_get","screenVideoState","idA","idB","aSort","bSort","undefined","useParticipantIds","onActiveSpeakerChange","onParticipantJoined","onParticipantLeft","onParticipantUpdated","preFilteredSortedIds","shouldUseCustomIds","getCustomFilteredIds","getLoadable","contents","Boolean","customIds","setCustomIds","maybeUpdateCustomIds","newIds","result","screenSharesState","screenAudio","screenVideo","screenId","useScreenShare","onError","onLocalScreenShareStarted","onLocalScreenShareStopped","startScreenShare","args","_len","_key","arguments","stopScreenShare","_len2","_key2","type","screens","isSharingScreen","some","s","useMediaTrack","isOff","state","persistentTrack","subscribed","useMergedRef","refs","element","ref","DailyAudioTrack","memo","forwardRef","onPlayFailed","sessionId","_ref$type","props","_objectWithoutPropertiesLoose","_excluded","audioEl","audio","audioRef","subscribedState","audioTag","handleCanPlay","play","target","message","handlePlay","playTimeout","addEventListener","srcObject","removeEventListener","autoPlay","displayName","DailyAudio","autoSubscribeActiveSpeaker","_ref$autoSubscribeAct","_ref$maxSpeakers","maxSpeakers","_ref$playLocalScreenA","playLocalScreenAudio","fill","speakers","setSpeakers","activeSpeakerId","containerRef","useImperativeHandle","getActiveSpeakerAudio","_containerRef$current","_containerRef$current2","querySelector","getAllAudio","from","_containerRef$current3","_containerRef$current4","querySelectorAll","getAudioBySessionId","_containerRef$current5","_containerRef$current6","getRmpAudio","_containerRef$current7","_containerRef$current8","getScreenAudio","_containerRef$current9","_containerRef$current10","getRmpAudioBySessionId","_containerRef$current11","_containerRef$current12","getScreenAudioBySessionId","_containerRef$current13","_containerRef$current14","assignSpeaker","subscribedParticipants","_daily$participants","tracks","isSubscribed","isDestroyed","subscribeToTracksAutomatically","updateParticipant","setSubscribedTracks","prevSpeakers","freeSlotCheck","findIndex","mutedIdx","speakerObjects","lastActiveA","_snapshot$getLoadable","lastActiveB","_snapshot$getLoadable2","replaceIdx","indexOf","_speakerObjects$","_x","removeSpeaker","newSpeakers","rmpAudioIds","_p$tracks","rmpAudio","screen","DailyVideo","automirror","_ref$fit","fit","mirror","onResize","_ref$playableStyle","playableStyle","_ref$style","style","isLocal","isScreen","isLocalCam","videoEl","videoRef","videoState","videoTrack","isPlayable","isMirrored","videoTrackSettings","getSettings","facingMode","video","playVideo","promise","then","controls","warn","paused","handleEnterPIP","transform","handleLeavePIP","handleVisibilityChange","document","visibilityState","load","frame","handleResize","cancelAnimationFrame","requestAnimationFrame","hidden","videoWidth","videoHeight","aspectRatio","height","width","muted","playsInline","objectFit","DailyDevicesContext","refreshDevices","Promise","resolve","generalCameraState","generalMicrophoneState","cameraDevicesState","microphoneDevicesState","speakerDevicesState","lastCameraErrorState","DailyDevices","_navigator","navigator","_navigator$mediaDevic","mediaDevices","getUserMedia","_navigator2","_navigator2$mediaDevi","enumerateDevices","devices","cams","d","deviceId","mics","_yield$daily$getInput","getInputDevices","camera","mic","speaker","mapDevice","device","prevDevices","_prevDevices$find$sta","_prevDevices$find","selected","find","sortDeviceByLabel","label","prevCams","prevMics","updateDeviceStates","currentCamState","currentMicState","camPermissionState","micPermissionState","permissions","query","_unused","awaitingCamAccess","initialCamOff","_tracks$video$off","byUser","awaitingMicAccess","initialMicOff","_tracks$audio$off","_tracks$audio","_tracks$audio$blocked","blocked","byDeviceInUse","m","_tracks$audio2","_tracks$audio2$blocke","byDeviceMissing","_tracks$audio3","_tracks$audio3$blocke","byPermissions","_tracks$video","_tracks$video$blocked","_tracks$video2","_tracks$video2$blocke","_tracks$video3","_tracks$video3$blocke","_ref13","_ref14","_ev$error","_ev$error2","missingMedia","_ev$error3","_ev$error4","blockedMedia","_ev$error5","_ev$error6","reason","_ev$error7","_ref15","_ref16","Provider","liveStreamingState","errorMsg","isLiveStreaming","layout","DailyLiveStreaming","prevState","meetingStateState","meetingErrorState","nonFatalErrorState","meetingSessionDataState","data","topology","DailyMeeting","updateMeetingState","meetingState","initMeetingSessionState","meetingSessionState","_ref8","topologyState","networkQualityState","networkThresholdState","DailyNetwork","initTopology","getNetworkTopology","prevQuality","quality","prevThreshold","threshold","recordingState","isLocalParticipantRecorded","isRecording","DailyRecordings","setState","useSetRecoilState","recordingParticipantIds","hasRecordingParticipants","isLocalParticipantRecording","_ev$layout","preset","recordingId","recordingStartedDate","startedBy","useMeetingState","roomState","DailyRoom","updateRoom","room","transcriptionState","isTranscribing","model","language","transcriptions","DailyTranscriptions","transcriptionStartDate","updatedBy","fromId","defaultOptions","defaultShouldCreateInstance","defaultProps","shouldCreateInstance","useCallInstance","parentElRef","_ref$options","_ref$shouldCreateInst","callInstance","setCallInstance","lastUsedOptions","handleDestroyedInstance","co","Daily","getCallInstance","once","_destroyCallInstance","destroyCallInstance","createFrame","createCallObject","destroy","useCallObject","useParticipant","filteredEvts","inlineAudioWorklet","encodeURIComponent","CPULoadState","useDailyError","meetingError","nonFatalError","inputSettingsState","participantCountsState","present","participantReceiveSettingsState","useRoom","sendSettingsState","_ref$recoilRootProps","recoilRootProps","eventsMap","handleEvent","allHandlers","_eventsMap$current$ev","_eventsMap$current","priorityHandlers","normalHandlers","cb","initEventHandlers","externalCallObject","callObject","memoizedOptions","internalCallObject","_eventsMap$current$ev3","_eventsMap$current$ev2","_eventsMap$current$ev4","_eventsMap$current$ev5","RecoilRoot","activeParticipant","onAppMessage","sendAppMessage","to","handleAppMessage","mediaTrack","onVolumeChange","audioCtx","AudioCtx","AudioContext","window","webkitAudioContext","audioContext","node","gainNode","mediaStreamSource","createMediaStreamSource","AudioWorkletNode","createGain","audioWorklet","addModule","port","onmessage","volume","gain","connect","destination","startProcessing","_node","disconnect","audioLevel","participantsAudioLevel","isLocalAudioLevelObserverRunning","startLocalAudioLevelObserver","isRemoteParticipantsAudioLevelObserverRunning","startRemoteParticipantsAudioLevelObserver","onCPULoadChange","cpu","updateCPULoadState","deepEqual","mounted","getCpuLoadStats","stats","cpuLoadState","cpuLoadStateReason","camState","micState","camDevices","micDevices","speakerDevices","cameraError","setCamera","setInputDevicesAsync","audioDeviceId","videoDeviceId","setMicrophone","_x2","setSpeaker","setOutputDeviceAsync","outputDeviceId","_x3","errorStates","cameras","currentCam","cam","currentMic","currentSpeaker","hasCamError","hasMicError","microphones","onInputSettingsUpdated","inputSettings","updateInputSettingsState","getInputSettings","updateInputSettings","onLiveStreamingError","onLiveStreamingStarted","onLiveStreamingStopped","onLiveStreamingUpdated","onLiveStreamingWarning","startLiveStreaming","stopLiveStreaming","updateLiveStreaming","localParticipant","onNetworkConnection","onNetworkQualityChange","getStats","newStats","getNetworkStats","onParticipantCountsUpdated","participantCounts","updateCounts","counts","canSendAudio","canSend","_permissions$canSend","canSendVideo","_permissions$canSend2","canSendCustomAudio","_permissions$canSend3","canSendCustomVideo","_permissions$canSend4","canSendScreenAudio","_permissions$canSend5","canSendScreenVideo","_permissions$canSend6","canAdminParticipants","canAdmin","_permissions$canAdmin","canAdminStreaming","_permissions$canAdmin2","canAdminTranscription","_permissions$canAdmin3","hasPresence","_ref$id","onReceiveSettingsUpdated","baseSettings","receiveSettings","updateReceiveSettingsState","_Object$entries","_Object$entries$_i","settings","getReceiveSettings","updateReceiveSettings","onRecordingData","onRecordingError","onRecordingStarted","onRecordingStopped","startRecording","stopRecording","updateRecording","onCountdown","localJoinDate","ejectDate","setEjectDate","ejectAfterElapsed","_room$tokenConfig$eje","_room$tokenConfig","tokenConfig","eject_after_elapsed","_room$config","config","expUTCTimeStamp","_room$tokenConfig$exp","_room$tokenConfig2","exp","_room$config2","ejectAtExp","_room$tokenConfig$eje2","_room$tokenConfig3","eject_at_token_exp","_room$config3","eject_at_room_exp","newEjectDate","expDate","oldEjectDate","_room$config4","_room$config5","_room$config6","_room$tokenConfig4","_room$tokenConfig5","_room$tokenConfig6","diff","_ejectDate$getTime","now","hours","Math","max","floor","minutes","seconds","onSendSettingsUpdated","sendSettings","storeSendSettings","getSendSettings","updateSendSettings","newSendSettings","onTranscriptionAppData","onTranscriptionError","onTranscriptionMessage","onTranscriptionStarted","onTranscriptionStopped","startTranscription","stopTranscription","onWaitingParticipantAdded","onWaitingParticipantRemoved","onWaitingParticipantUpdated","waitingParticipants","updateWaitingParticipantAccess","grantRequestedAccess","updateWaitingParticipant","updateWaitingParticipants","*","grantAccess","denyAccess"],"mappings":"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"}