import { DailyEventObject } from '@daily-co/daily-js';
interface UseWaitingParticipantsArgs {
    onWaitingParticipantAdded?(ev: DailyEventObject<'waiting-participant-added'>): void;
    onWaitingParticipantUpdated?(ev: DailyEventObject<'waiting-participant-updated'>): void;
    onWaitingParticipantRemoved?(ev: DailyEventObject<'waiting-participant-removed'>): void;
}
/**
 * Hook to access and manage waiting participants.
 */
export declare const useWaitingParticipants: ({ onWaitingParticipantAdded, onWaitingParticipantRemoved, onWaitingParticipantUpdated, }?: UseWaitingParticipantsArgs) => {
    waitingParticipants: import("@daily-co/daily-js").DailyWaitingParticipant[];
    grantAccess: (id: '*' | string) => void;
    denyAccess: (id: '*' | string) => void;
};
export {};
