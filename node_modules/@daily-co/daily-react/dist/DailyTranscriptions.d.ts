import { DailyTranscriptionDeepgramOptions } from '@daily-co/daily-js';
import React from 'react';
export interface Transcription {
    session_id: string;
    user_id: string;
    text: string;
    timestamp: string;
    is_final: boolean;
}
interface TranscriptionState extends DailyTranscriptionDeepgramOptions {
    /**
     * Determines whether an error occurred during the last transcription attempt.
     */
    error?: boolean;
    /**
     * Determines whether a transcription is currently running or not.
     */
    isTranscribing: boolean;
    /**
     * Contains the date when the 'transcription-started' event was received.
     * This doesn't necessarily match the date the transcription was actually started.
     */
    transcriptionStartDate?: Date;
    /**
     * Contains the session_id of the participant who started the transcription.
     */
    startedBy?: string;
    /**
     * Contains the session_id of the participant who updated the transcription.
     */
    updatedBy?: string;
    /**
     * Contains the transcriptions that we received.
     */
    transcriptions: Transcription[];
}
export declare const transcriptionState: import("recoil").RecoilState<TranscriptionState>;
export declare const DailyTranscriptions: React.FC<React.PropsWithChildren<{}>>;
export {};
