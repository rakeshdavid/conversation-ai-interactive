import { DailyStreamingLayoutConfig } from '@daily-co/daily-js';
import React from 'react';
interface RecordingState {
    /**
     * Determines whether an error occurred during the last recording attempt.
     */
    error?: boolean;
    /**
     * Determines whether the local participant is being recorded, based on the recording settings.
     */
    isLocalParticipantRecorded: boolean;
    /**
     * Determines whether a recording is currently running or not.
     */
    isRecording: boolean;
    /**
     * Contains the last applied cloud recording layout config.
     */
    layout?: DailyStreamingLayoutConfig;
    /**
     * Determines whether the recording is running locally.
     * See [enable_recording](https://docs.daily.co/reference/rest-api/rooms/config#enable_recording).
     */
    local?: boolean;
    /**
     * Contains the recording id.
     */
    recordingId?: string;
    /**
     * Contains the date when the 'recording-started' event was received.
     * This doesn't necessarily match the date the recording was actually started.
     */
    recordingStartedDate?: Date;
    /**
     * Contains the session_id of the participant who started the recording.
     */
    startedBy?: string;
    /**
     * Contains the recording type.
     * See [enable_recording](https://docs.daily.co/reference/rest-api/rooms/config#enable_recording).
     */
    type?: string;
}
export declare const recordingState: import("recoil").RecoilState<RecordingState>;
export declare const DailyRecordings: React.FC<React.PropsWithChildren<unknown>>;
export {};
