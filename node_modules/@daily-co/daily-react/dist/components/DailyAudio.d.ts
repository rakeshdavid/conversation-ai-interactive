import React from 'react';
import { DailyAudioPlayException } from './DailyAudioTrack';
interface Props {
    /**
     * When enabled and the call is configured for manual track subscriptions,
     * DailyAudio will automatically subscribe to the active speaker's audio track.
     */
    autoSubscribeActiveSpeaker?: boolean;
    /**
     * Maximum amount of parallel speakers. Default: 5.
     */
    maxSpeakers?: number;
    /**
     * Callback to handle failed attempt to play audio.
     */
    onPlayFailed?(e: DailyAudioPlayException): void;
    /**
     * When enabled, plays audio from a local screenAudio track.
     */
    playLocalScreenAudio?: boolean;
}
export interface DailyAudioHandle {
    /**
     * Returns all rendered audio elements.
     */
    getAllAudio(): HTMLAudioElement[];
    /**
     * Returns the audio element assigned to the current active speaker.
     */
    getActiveSpeakerAudio(): HTMLAudioElement | null;
    /**
     * Returns all rendered audio elements for rmpAudio tracks.
     */
    getRmpAudio(): HTMLAudioElement[];
    /**
     * Returns all rendered audio elements for screenAudio tracks.
     */
    getScreenAudio(): HTMLAudioElement[];
    /**
     * Returns the audio track for the given sessionId.
     */
    getAudioBySessionId(sessionId: string): HTMLAudioElement | null;
    /**
     * Returns the rmpAudio track for the given sessionId.
     */
    getRmpAudioBySessionId(sessionId: string): HTMLAudioElement | null;
    /**
     * Returns the screenAudio track for the given sessionId.
     */
    getScreenAudioBySessionId(sessionId: string): HTMLAudioElement | null;
}
export declare const DailyAudio: React.MemoExoticComponent<React.ForwardRefExoticComponent<Props & React.RefAttributes<DailyAudioHandle>>>;
export {};
